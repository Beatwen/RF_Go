@inherits ComponentBase
@page "/"
@using MudBlazor
@using Newtonsoft.Json
@using System.IO
@using System
@using RF_Go.Data
@using RF_Go.Models
@using RF_Go.ViewModels
@using RF_Go.Components
@using System.Diagnostics

@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject DevicesViewModel DevicesViewModel

    <MudTabs Elevation="4" Rounded="true" AlwaysShowScrollButtons="true" Color="@Color.Info" Class="mt-4">
        <MudTabPanel Text="Devices" ID='"devices_tab"'>
            <MudText>

                <AddDevices DeviceData="deviceData" DevicesViewModel="DevicesViewModel" />
                <MainTab @ref="mainTabRef" DeviceData="deviceData" DevicesViewModel="DevicesViewModel" />
                <SlidersSpacers />
            </MudText>
        </MudTabPanel>
        <MudTabPanel Text="TVChannels" ID='"tvchannels_tab"' />
        <MudTabPanel Text="Remote" ID='"remote_tab"' />
    </MudTabs>

@code 
{

    private RFDevice Device => DevicesViewModel.OperatingDevice;
    public DeviceData deviceData;
    private MainTab mainTabRef;

    private void HandleCalculateClicked()
    {
        // Handle the event here, possibly refresh MainTab
        mainTabRef.Refresh(); // Example: call a method to refresh MainTab
    }
    protected override async Task OnInitializedAsync()
    {
        var context = new DatabaseContext();
        DevicesViewModel = new DevicesViewModel(context);
        var json = File.ReadAllText(Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Shared", "Devices.json"));
        deviceData = JsonConvert.DeserializeObject<DeviceData>(json);
        await DevicesViewModel.LoadDevicesAsync();
        await base.OnInitializedAsync();
    }
}
