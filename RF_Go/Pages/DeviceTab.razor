@page "/devices"
@using System.Diagnostics
@using RF_Go.Models
@using System.Net.Http.Json

<h1>All Devices</h1>


    <p>List is empty. Go to the device tab to add a device.</p>
    <MudTable Hover="true" Dense="false" Bordered="false" Striped="true" @bind-SelectedItem="selectedItem1" @ref="mudTable"
              RowClass="cursor-pointer" RowClassFunc="@SelectedRowClassFunc">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Devices</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>
                Cross
            </MudTh>
            <MudTh>Brand</MudTh>
            <MudTh>Model</MudTh>
            <MudTh>Frequency</MudTh>
            <MudTh>Frequency Range</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>
                Cross
            </MudTd>
            <MudTd>@context.Brand</MudTd>
            <MudTd>@context.Model</MudTd>
            <MudTd>@context.Frequency</MudTd>
            <MudTd>@($"{context.Range}")</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    <button class="btn btn-danger" >Delete Selected</button>
    <button class="btn btn-primary">Log Selected Devices</button>
}
@code {
    private int selectedRowNumber = -1;
    private MudTable<RFDevice> mudTable;
    private bool selectAll { get; set; }
    private List<string> clickedEvents = new();
    private List<RFDevice> selectedDevices = new List<RFDevice>();
    private string searchString1 = "";
    private RFDevice selectedItem1 = null;

    private void LogSelectedDevices()
    {
    }

    private void DeleteSelected()
    {
        foreach (var device in selectedDevices)
        {
            ;
        }

        // Clear the selectedDevices collection
        selectedDevices.Clear();
        selectAll = false;
    }

    private string SelectedRowClassFunc(RFDevice device, int rowNumber)
    {
        if (selectedRowNumber == rowNumber)
        {
            selectedRowNumber = -1;
            clickedEvents.Add("Selected Row: None");
            return string.Empty;
        }
        else if (mudTable.SelectedItem != null && mudTable.SelectedItem.Equals(device))
        {
            selectedRowNumber = rowNumber;
            clickedEvents.Add($"Selected Row: {rowNumber}");
            return "selected";
        }
        else
        {
            return string.Empty;
        }
    }
}
