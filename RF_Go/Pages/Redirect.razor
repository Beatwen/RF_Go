@page "/"
@inject NavigationManager NavigationManager
@using Microsoft.Maui.Storage
@using System.Diagnostics;
@using System.Text.Json;
@using System.Net.Http;
@using System.Net.Http.Json;
@using RF_Go.Utils;

<h3>Redirection...</h3>

@code {
    private HttpClient client = new HttpClient();
    private string deviceIdentifier = "";

    protected override async Task OnInitializedAsync()
    {
        // Récupérer ou générer l'identifiant du device
        deviceIdentifier = await GUID.GetOrCreateDeviceIdentifier();
        Debug.WriteLine($"Device Identifier: {deviceIdentifier}");

        var userKey = await SecureStorage.GetAsync("userKey");
        var licenseKey = await SecureStorage.GetAsync("licenseKey");
        var user = await SecureStorage.GetAsync("user");
        Debug.Print("user" + userKey);
        Debug.Print("license" + licenseKey);
        Debug.Print("user" + user);

        if (string.IsNullOrEmpty(userKey))
        {
            NavigationManager.NavigateTo("/register");
            return;
        }

        if (string.IsNullOrEmpty(licenseKey))
        {
            Debug.WriteLine("userKey" + userKey);
            NavigationManager.NavigateTo("/license");
            return;
        }

        try
        {
            // Vérification du réseau et validation de la licence

            client.DefaultRequestHeaders.Add("X-API-KEY", AppConfig.ApiKey);
            client.DefaultRequestHeaders.Add("X-USER-KEY", userKey);
            client.DefaultRequestHeaders.Add("X-DEVICE-ID", deviceIdentifier);
            client.DefaultRequestHeaders.Add("X-LICENSE-KEY", licenseKey);

            var response = await client.PostAsJsonAsync("http://localhost:3000/licenses/validate", new
            {
                licenseKey,
                deviceId = deviceIdentifier
            });

            if (response.IsSuccessStatusCode)
            {
                var responseContent = await response.Content.ReadAsStringAsync();
                var result = JsonSerializer.Deserialize<LicenseValidationResponse>(responseContent);

                if (result.valid)
                {
                    NavigationManager.NavigateTo("/index");
                }
                else
                {
                    NavigationManager.NavigateTo("/license");
                }
            }
            else
            {
                Debug.Print(response.Content.ToString());
                NavigationManager.NavigateTo("/index");
            }
        }
        catch
        {
            // Mode hors ligne
            NavigationManager.NavigateTo("/index");
        }
    }

    public class LicenseValidationResponse
    {
        public bool valid { get; set; }
        public string message { get; set; }
    }
}
