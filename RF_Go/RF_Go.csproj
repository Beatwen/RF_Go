<Project Sdk="Microsoft.NET.Sdk.Razor">

    <PropertyGroup>
        <TargetFrameworks>net8.0-maccatalyst;net8.0-ios;net8.0-android</TargetFrameworks>
		
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.26100.0</TargetFrameworks>
		<SelfContained>true</SelfContained>
        <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
        <!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
        <OutputType>Exe</OutputType>
        <RootNamespace>RF_Go</RootNamespace>
        <UseMaui>true</UseMaui>
        <SingleProject>true</SingleProject>
        <ImplicitUsings>enable</ImplicitUsings>
        <EnableDefaultCssItems>false</EnableDefaultCssItems>

        <!-- Display name -->
        <ApplicationTitle>RF_Go</ApplicationTitle>

        <!-- App Identifier -->
        <ApplicationId>FT3A4TV42D.com.christophebouserez.rfgo</ApplicationId>
        <ApplicationIdGuid>F1280CF3-71B1-40BF-A5C9-2F6267D27C2F</ApplicationIdGuid>

        <!-- Versions -->
        <ApplicationDisplayVersion>1.0.2</ApplicationDisplayVersion>
        <ApplicationVersion>3</ApplicationVersion>

        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">14.2</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">14.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">24.0</SupportedOSPlatformVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
        <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
        <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
        
        <!-- RuntimeIdentifiers pour toutes les plateformes -->
        <RuntimeIdentifiers Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers>
        <!-- Nous utiliserons des cibles séparées pour iOS dans le workflow -->
        <RuntimeIdentifier Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">ios-arm64</RuntimeIdentifier>
        <RuntimeIdentifiers Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">android-arm64;android-x64</RuntimeIdentifiers>
        <RuntimeIdentifiers Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">win-x64;win-x86</RuntimeIdentifiers>
        <PublishSingleFile>false</PublishSingleFile>
        <PublishReadyToRun>false</PublishReadyToRun>
        <PublishTrimmed>false</PublishTrimmed>
        <PublishProfile>FolderProfile.pubxml</PublishProfile>
        <Platforms>AnyCPU;x64</Platforms>
    </PropertyGroup>

    <PropertyGroup Condition="'$(TargetFramework)'=='net8.0-ios'">
      <ApplicationId>FT3A4TV42D.com.christophebouserez.rfgo</ApplicationId>
      <CodesignProvision>RF Go iOS</CodesignProvision>
	    <CodesignTeamId>FT3A4TV42D</CodesignTeamId>
	    <ProvisioningType>manual</ProvisioningType>
    </PropertyGroup>

    <!-- Désactivation de ReadyToRun pour éviter les problèmes de compilation -->
    <PropertyGroup>
      <PublishReadyToRun>false</PublishReadyToRun>
      <WindowsPackageType>None</WindowsPackageType>
    </PropertyGroup>

    <!-- Signature MSIX uniquement en local (pas sur GitHub Actions) -->
    <PropertyGroup Condition="'$(CI)' != 'true'">
      <PackageCertificateThumbprint>B2782CA9819B526BE85AE3A6C0BD8C93084B53F6</PackageCertificateThumbprint>
      <WindowsPackageType>MSIX</WindowsPackageType>
      <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
      <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
      <AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
      <AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
      <GenerateTestArtifacts>True</GenerateTestArtifacts>
      <AppInstallerUri>C:\Users\c_bou\source\repos\RF_Go\Installers</AppInstallerUri>
      <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
      <GenerateAppInstallerFile>True</GenerateAppInstallerFile>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-ios|AnyCPU'">
      <CodesignExtraArgs>269570</CodesignExtraArgs>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-ios|x64'">
      <CodesignExtraArgs>269570</CodesignExtraArgs>
    </PropertyGroup>

    <!-- Désactiver AOT pour Android -->
    <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-android'">
      <RunAOTCompilation>false</RunAOTCompilation>
      <TrimmerDefaultAction>link</TrimmerDefaultAction>
    </PropertyGroup>

    <!-- Configuration du trimming par plateforme -->
    <!-- macOS/iOS : TEMPORAIREMENT DÉSACTIVÉ pour test rapide -->
    <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-maccatalyst' OR '$(TargetFramework)' == 'net8.0-ios'">
      <PublishTrimmed>false</PublishTrimmed>
      <TrimmerDefaultAction>link</TrimmerDefaultAction>
    </PropertyGroup>
    
    <!-- Windows/Android : Trimming optionnel (contrôlé par ligne de commande) -->
    <PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-windows10.0.26100.0' OR '$(TargetFramework)' == 'net8.0-android'">
      <PublishTrimmed>false</PublishTrimmed>
    </PropertyGroup>

    <ItemGroup>
        <!-- App Icon -->
        <MauiIcon Include="Resources\AppIcon\appicon.svg" />
        
        <!-- Splash Screen -->
        <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#1a1a27" BaseSize="456,456" />

        <!-- Images -->
        <MauiImage Include="Resources\Images\*" />
        <MauiImage Update="Resources\Images\dotnet_bot.svg" BaseSize="168,208" />
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(Filename)%(Extension)" />

		<!-- Custom Fonts -->
        <MauiFont Include="Resources\Fonts\*" />

    </ItemGroup>

    <ItemGroup>
      <MauiAsset Remove="Resources\Raw\AboutAssets.txt" />
    </ItemGroup>

    <ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.100" />
        <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
        <PackageReference Include="CommunityToolkit.Maui" Version="8.0.0" />
        <PackageReference Include="LiveCharts" Version="0.9.7" />
        <PackageReference Include="LiveChartsCore.SkiaSharpView.Maui" Version="2.0.0-rc4.5" />
        <PackageReference Include="Makaretu.Dns" Version="2.0.1" />
        <PackageReference Include="Makaretu.Dns.Multicast.New" Version="0.37.0" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebView.Maui" Version="8.0.3" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="8.0.0">
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
          <PrivateAssets>all</PrivateAssets>
        </PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="8.0.0" />

		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="8.0.0" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="8.0.0">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.4" />
        <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
        <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" Version="8.3.0" />
        <PackageReference Include="MudBlazor" Version="7.15.0" />
        <PackageReference Include="sqlite-net-pcl" Version="1.8.116" />
        <PackageReference Include="SQLitePCLRaw.bundle_green" Version="2.1.7" />
        <PackageReference Include="SQLitePCLRaw.core" Version="2.1.7" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.3.0" />
        <PackageReference Include="QuestPDF" Version="2024.12.6" />
    </ItemGroup>

    <ItemGroup>
      <MauiXaml Update="AppShell.xaml">
        <Generator>MSBuild:Compile</Generator>
      </MauiXaml>
    </ItemGroup>

	<ItemGroup>
      <None Update="Data\Devices.db">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </None>
    </ItemGroup>

	<ItemGroup>
	  <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>

	<!-- Configuration du trimmer pour Android, macOS et iOS -->
	<ItemGroup Condition="'$(TargetFramework)' == 'net8.0-android' OR '$(TargetFramework)' == 'net8.0-maccatalyst' OR '$(TargetFramework)' == 'net8.0-ios'">
	  <TrimmerRootDescriptor Include="ILLink.Substitutions.xml" />
	</ItemGroup>

</Project>
