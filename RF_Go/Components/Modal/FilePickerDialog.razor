@using Microsoft.AspNetCore.Components.Forms
@using System.IO
@using MudBlazor
@using Microsoft.Maui.Storage

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h6">@Title</MudText>
        <MudText>@Message</MudText>
        <MudButton Color="Color.Primary" OnClick="PickFile" Disabled="@IsBusy" StartIcon="@Icons.Material.Filled.Upload">
            Select File
        </MudButton>
        @if (!string.IsNullOrEmpty(SelectedFileName))
        {
            <MudText Typo="Typo.body2" Class="mt-2">@SelectedFileName</MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!CanSubmit || IsBusy)">@ConfirmText</MudButton>
        <MudButton Color="Color.Secondary" OnClick="Cancel" Disabled="@IsBusy">@CancelText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public string Title { get; set; }
    [Parameter] public string Message { get; set; }
    [Parameter] public string ConfirmText { get; set; }
    [Parameter] public string CancelText { get; set; }

    private string SelectedFileName { get; set; }
    private bool IsBusy { get; set; }
    private string SelectedFilePath { get; set; }
    private bool CanSubmit => !string.IsNullOrEmpty(SelectedFilePath);

    private async Task PickFile()
    {
        IsBusy = true;
        try
        {
            var result = await FilePicker.PickAsync(new PickOptions
            {
                PickerTitle = "Select Scan File",
                FileTypes = new FilePickerFileType(new Dictionary<DevicePlatform, IEnumerable<string>>
                {
                    { DevicePlatform.WinUI, new[] { ".sdb2", ".sdb3" } },
                    { DevicePlatform.Android, new[] { "application/xml" } },
                    { DevicePlatform.iOS, new[] { "public.xml" } }
                })
            });

            if (result != null)
            {
                SelectedFileName = result.FileName;
                SelectedFilePath = result.FullPath;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error picking file: {ex.Message}");
        }
        finally
        {
            IsBusy = false;
        }
    }

    private void Submit()
    {
        if (!string.IsNullOrEmpty(SelectedFilePath))
        {
            MudDialog.Close(DialogResult.Ok(SelectedFilePath));
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
} 