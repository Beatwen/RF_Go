@using RF_Go.Utils
@using RF_Go.Models.Licensing
@using System.Text.Json
@using System.Text
@using System.Net.Http.Json
@using System.Diagnostics


<MudCard Class="pa-4">
    <MudText Typo="Typo.h6" Align="Align.Center">Buy a license</MudText>
    <MudSelect T="string" @bind-Value="SelectedLicenseType" FullWidth="true">
        <MudSelectItem Value="@("Standard")">Standard</MudSelectItem>
        <MudSelectItem Value="@("Premium")">Premium</MudSelectItem>
    </MudSelect>
    <MudLink Class="full-width-link mt-3" Underline="Underline.None" Color="Color.Inherit" Href="@BaseURL">
        <MudButton Variant="Variant.Filled" Color="Color.Success" FullWidth="true">
            Buy
        </MudButton>
    </MudLink>

    <MudText Typo="Typo.subtitle2" Color="Color.Error" Class="mt-2">@Message</MudText>
</MudCard>

@code {
    private string SelectedLicenseType = "Standard";
    private string Message = "";
    private string BaseURL = AppConfig.AppBaseUrl + "/login";

    private async Task SubmitPurchase()
    {
        string UserKey = await SecureStorage.GetAsync("userKey");
        Debug.WriteLine(UserKey);

        // try
        // {
        //     var payload = new
        //     {
        //         licenseType = SelectedLicenseType,
        //         userID = UserKey
        //     };

        //     using var client = new HttpClient();
        //     client.DefaultRequestHeaders.Add("X-USER-KEY", await SecureStorage.GetAsync("userKey"));
        //     client.DefaultRequestHeaders.Add("X-API-KEY", AppConfig.ApiKey);

        //     var response = await client.PostAsJsonAsync($"{AppConfig.ApiBaseUrl}/licenses/buy", payload);

        //     if (response.IsSuccessStatusCode)
        //     {
        //         var responseContent = await response.Content.ReadAsStringAsync();
        //         var result = JsonSerializer.Deserialize<LicenseResponse>(responseContent);
        //         Message = "Votre achat a été confirmé ! Merci. Votre licence a été envoyée par mail";
        //     }
        //     else
        //     {
        //         var errorContent = await response.Content.ReadAsStringAsync();
        //         Message = $"Erreur : {response.StatusCode}. Détails : {errorContent}";
        //     }
        // }
        // catch (Exception ex)
        // {
        //     Message = $"Une erreur est survenue : {ex.Message}";
        // }
    }
    public class LicenseResponse 
    {
        private string message { get; set; }
        private License license { get; set; }
    }
}
