@using System.Net.Http.Json
@using Utils
@using Models.Licensing
@using System.Diagnostics;

@inject NavigationManager NavigationManager

<MudContainer MaxWidth="MaxWidth.Medium" Style="margin: auto; padding: 20px;">
    <MudPaper Elevation="2" Class="pa-4">
        <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Mon Compte</MudText>

        @if (User != null)
        {
            <MudCard Class="pa-2 mb-2">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Nom d'utilisateur</MudText>
                    <MudText Typo="Typo.subtitle2">@User.userName</MudText>
                </MudCardContent>
            </MudCard>

            <MudCard Class="pa-2 mb-2">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Prénom</MudText>
                    <MudText Typo="Typo.subtitle2">@User.firstName</MudText>
                </MudCardContent>
            </MudCard>

            <MudCard Class="pa-2 mb-2">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Nom</MudText>
                    <MudText Typo="Typo.subtitle2">@User.lastName</MudText>
                </MudCardContent>
            </MudCard>

            <MudCard Class="pa-2 mb-2">
                <MudCardContent>
                    <MudText Typo="Typo.h6">Email</MudText>
                    <MudText Typo="Typo.subtitle2">@User.email</MudText>
                </MudCardContent>
            </MudCard>
        }
        else
        {
            <MudText Typo="Typo.subtitle1" Align="Align.Center" Color="Color.Error">
                Impossible de charger les informations de votre compte.
            </MudText>
        }

        <MudDivider Class="mt-4 mb-4" />

        <MudButton Variant="Variant.Outlined" Color="Color.Error" OnClick="ConfirmUserDeletion">
            Supprimer mon compte
        </MudButton>
    </MudPaper>
</MudContainer>

<MudDialog @bind-IsVisible="IsDeleteDialogOpen" MaxWidth="MaxWidth.Small" Style="padding: 20px;">
    <DialogContent>Confirmer la suppression</DialogContent>
    <DialogContent>
        <MudText Typo="Typo.body1">Êtes-vous sûr de vouloir supprimer votre compte ? Cette action est irréversible.</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="() => IsDeleteDialogOpen = false">
            Annuler
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteUser">
            Supprimer
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private User User = null;
    private bool IsDeleteDialogOpen = false;
    private string Message = "";
    private HttpClient client = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        User = await SecureStorageUtils.GetUserFromSecureStorage();
    }

    private void ConfirmUserDeletion()
    {
        IsDeleteDialogOpen = true;
    }

    private async Task DeleteUser()
    {
        try
        {
            string userKey = await SecureStorage.GetAsync("userKey");
            if (!string.IsNullOrEmpty(userKey))
            {
                // SecureStorage.RemoveAll(); // A supprimer en prod, on supprime que si le user est delete de la DB
                client.DefaultRequestHeaders.Add("X-API-KEY", AppConfig.ApiKey);
                var response = await client.DeleteAsync($"http://localhost:3000/users/{userKey}");
                if (response.IsSuccessStatusCode)
                {
                    SecureStorage.RemoveAll();
                    NavigationManager.NavigateTo("/register");

                }
                else
                {
                    Message = "Erreur lors de la suppression de votre compte.";
                }
            }
        }
        catch (Exception ex)
        {
            Message = $"Erreur : {ex.Message}";
        }
        finally
        {
            IsDeleteDialogOpen = false;
        }
    }
}
