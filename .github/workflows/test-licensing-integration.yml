name: 🧪 Test Licensing Server Integration

on:
  workflow_dispatch:
    inputs:
      test_version:
        description: 'Version à envoyer'
        required: false
        default: 'v1.0.0'
        type: string
      production_mode:
        description: 'Écrire dans le fichier de production (au lieu du test)'
        required: false
        default: true
        type: boolean

jobs:
  test-integration:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📋 Extract Version Info
      id: get_version
      run: |
        VERSION="${{ github.event.inputs.test_version || 'v1.0.0' }}"
        PRODUCTION_MODE="${{ github.event.inputs.production_mode || 'true' }}"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "PRODUCTION_MODE=$PRODUCTION_MODE" >> $GITHUB_OUTPUT
        
        if [ "$PRODUCTION_MODE" = "true" ]; then
          echo "🚀 PRODUCTION MODE: Writing to rf_go_downloads.json with version: $VERSION"
        else
          echo "🧪 TEST MODE: Writing to rf_go_downloads_test.json with version: $VERSION"
        fi
    
    - name: 🚀 Send Test Data to Licensing Server
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.LICENSING_SERVER_TOKEN }}
        repository: Beatwen/Licensing-Server
        event-type: rf-go-release
        client-payload: |
          {
            "version": "${{ steps.get_version.outputs.VERSION }}",
            "release_url": "https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.VERSION }}",
            "test_mode": ${{ steps.get_version.outputs.PRODUCTION_MODE == 'false' }},
            "downloads": {
              "windows": "https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/RF_Go-${{ steps.get_version.outputs.VERSION }}-setup-windows-x64.exe",
              "android": "https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/RF_Go-${{ steps.get_version.outputs.VERSION }}-android.apk",
              "macos": "https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/RF_Go-${{ steps.get_version.outputs.VERSION }}-macos-x64.tar.gz",
              "ios": "https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/RF_Go-${{ steps.get_version.outputs.VERSION }}-ios-arm64.tar.gz"
            }
          }
    
    - name: ✅ Update Completed
      run: |
        PRODUCTION_MODE="${{ steps.get_version.outputs.PRODUCTION_MODE }}"
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        
        if [ "$PRODUCTION_MODE" = "true" ]; then
          echo "🚀 PRODUCTION update completed!"
          echo "📡 Data sent to Beatwen/Licensing-Server repository"
          echo "🔍 Check the Actions tab in Beatwen/Licensing-Server to see the workflow execution"
          echo "📂 The file Frontend/public/config/rf_go_downloads.json should be updated with version $VERSION"
          echo "🌐 This will update the PRODUCTION download links!"
        else
          echo "🧪 TEST update completed!"
          echo "📡 Data sent to Beatwen/Licensing-Server repository"  
          echo "🔍 Check the Actions tab in Beatwen/Licensing-Server to see the workflow execution"
          echo "📂 The file Frontend/public/config/rf_go_downloads_test.json should be updated with version $VERSION"
        fi 