"use strict";(self.webpackChunkrf_go_docs=self.webpackChunkrf_go_docs||[]).push([[6496],{8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>t});var i=r(6540);const s={},l=i.createContext(s);function o(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:n},e.children)}},9240:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"protocols/dns-discovery","title":"Protocoles DNS et D\xe9couverte","description":"Vue d\'ensemble","source":"@site/docs/protocols/dns-discovery.md","sourceDirName":"protocols","slug":"/protocols/dns-discovery","permalink":"/RF_Go/protocols/dns-discovery","draft":false,"unlisted":false,"editUrl":"https://github.com/Beatwen/RF_Go/tree/main/docs/protocols/dns-discovery.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Workflows de l\'Application","permalink":"/RF_Go/features/workflows"},"next":{"title":"Protocoles UDP/TCP","permalink":"/RF_Go/protocols/udp-tcp"}}');var s=r(4848),l=r(8453);const o={},t="Protocoles DNS et D\xe9couverte",c={},a=[{value:"Vue d&#39;ensemble",id:"vue-densemble",level:2},{value:"Architecture du Service de D\xe9couverte",id:"architecture-du-service-de-d\xe9couverte",level:2},{value:"Bonjour (mDNS)",id:"bonjour-mdns",level:2},{value:"Principe de Fonctionnement",id:"principe-de-fonctionnement",level:3},{value:"Impl\xe9mentation",id:"impl\xe9mentation",level:3},{value:"Protocole de D\xe9couverte Sennheiser G4",id:"protocole-de-d\xe9couverte-sennheiser-g4",level:2},{value:"En r\xe9sum\xe9",id:"en-r\xe9sum\xe9",level:3},{value:"Processus de D\xe9couverte G4",id:"processus-de-d\xe9couverte-g4",level:3},{value:"Impl\xe9mentations",id:"impl\xe9mentations",level:3},{value:"Format des Paquets G4",id:"format-des-paquets-g4",level:3},{value:"Protocoles Sp\xe9cifiques aux Fabricants",id:"protocoles-sp\xe9cifiques-aux-fabricants",level:2},{value:"Sennheiser",id:"sennheiser",level:3},{value:"D\xe9couverte Standard",id:"d\xe9couverte-standard",level:4},{value:"D\xe9couverte EWDX",id:"d\xe9couverte-ewdx",level:4},{value:"Shure",id:"shure",level:3},{value:"D\xe9couverte SLP (Service Location Protocol)",id:"d\xe9couverte-slp-service-location-protocol",level:4},{value:"Format des Paquets SLP",id:"format-des-paquets-slp",level:4},{value:"Appareils Support\xe9s",id:"appareils-support\xe9s",level:4},{value:"D\xe9tection et Attribution des Gestionnaires d&#39;Appareils",id:"d\xe9tection-et-attribution-des-gestionnaires-dappareils",level:2},{value:"Configuration du R\xe9seau",id:"configuration-du-r\xe9seau",level:2},{value:"Pr\xe9requis",id:"pr\xe9requis",level:3},{value:"D\xe9pannage",id:"d\xe9pannage",level:3},{value:"S\xe9curit\xe9",id:"s\xe9curit\xe9",level:2},{value:"Consid\xe9rations",id:"consid\xe9rations",level:3},{value:"Bonnes Pratiques",id:"bonnes-pratiques",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"protocoles-dns-et-d\xe9couverte",children:"Protocoles DNS et D\xe9couverte"})}),"\n",(0,s.jsx)(n.h2,{id:"vue-densemble",children:"Vue d'ensemble"}),"\n",(0,s.jsx)(n.p,{children:"RF Go utilise plusieurs protocoles pour la d\xe9couverte et la communication avec les appareils audio sans fil. Cette section d\xe9crit les protocoles de d\xe9couverte bas\xe9s sur DNS, notamment Bonjour (mDNS) et les protocoles sp\xe9cifiques aux fabricants, ainsi que les protocoles propri\xe9taires comme celui utilis\xe9 par Sennheiser G4."}),"\n",(0,s.jsx)(n.h2,{id:"architecture-du-service-de-d\xe9couverte",children:"Architecture du Service de D\xe9couverte"}),"\n",(0,s.jsx)(n.p,{children:"RF Go impl\xe9mente un service de d\xe9couverte unifi\xe9 qui combine plusieurs m\xe9thodes pour d\xe9tecter tous les types d'appareils compatibles. L'architecture est con\xe7ue pour \xeatre extensible, permettant l'ajout de nouveaux protocoles de d\xe9couverte."}),"\n",(0,s.jsx)(n.mermaid,{value:'flowchart TB\r\n    DiscoveryService --\x3e mDNSDiscovery\r\n    DiscoveryService --\x3e G4Discovery\r\n    DiscoveryService --\x3e StandardSennheiserDiscovery\r\n    mDNSDiscovery -- "_ssc._udp.local" --\x3e SennhsierEWDX/TeamConnectCeiling2..\r\n    mDNSDiscovery -- "_ewd._http.local" --\x3e SennheiserEWDX\r\n    G4Discovery -- "UDP Multicast" --\x3e SennheiserG4IEM\r\n    StandardSennheiserDiscovery -- "mDNS Query" --\x3e SennheiserLegacy'}),"\n",(0,s.jsx)(n.h2,{id:"bonjour-mdns",children:"Bonjour (mDNS)"}),"\n",(0,s.jsx)(n.h3,{id:"principe-de-fonctionnement",children:"Principe de Fonctionnement"}),"\n",(0,s.jsx)(n.p,{children:"Bonjour est une impl\xe9mentation d'Apple du protocole mDNS (Multicast DNS). Il permet la d\xe9couverte automatique des appareils sur un r\xe9seau local sans n\xe9cessiter de serveur DNS d\xe9di\xe9."}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant App as RF Go\r\n    participant Network as R\xe9seau Local\r\n    participant Device as Appareil Audio\r\n\r\n    App->>Network: Requ\xeate mDNS\r\n    Network->>Device: Diffusion de la requ\xeate\r\n    Device->>Network: R\xe9ponse mDNS\r\n    Network->>App: R\xe9ception de la r\xe9ponse"}),"\n",(0,s.jsx)(n.h3,{id:"impl\xe9mentation",children:"Impl\xe9mentation"}),"\n",(0,s.jsxs)(n.p,{children:["RF Go utilise la biblioth\xe8que ",(0,s.jsx)(n.code,{children:"Makaretu.Dns"})," pour impl\xe9menter la d\xe9couverte mDNS :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'public class DiscoveryService\r\n{\r\n    private readonly MulticastService _multicastService;\r\n    private readonly ServiceDiscovery _serviceDiscovery;\r\n\r\n    public DiscoveryService(IEnumerable<IDeviceHandler> handlers, DevicesViewModel devicesViewModel)\r\n    {\r\n        _multicastService = new MulticastService();\r\n        _serviceDiscovery = new ServiceDiscovery(_multicastService);\r\n        _serviceDiscovery.ServiceDiscovered += OnServiceDiscovered;\r\n        _serviceDiscovery.ServiceInstanceDiscovered += OnServiceInstanceDiscovered;\r\n    }\r\n\r\n    public void StartDiscovery()\r\n    {\r\n        _multicastService.Start();\r\n        _serviceDiscovery.QueryServiceInstances("_ssc._udp.local");\r\n        _serviceDiscovery.QueryServiceInstances("_ewd._http.local");\r\n        // ... autres m\xe9thodes de d\xe9couverte\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"protocole-de-d\xe9couverte-sennheiser-g4",children:"Protocole de D\xe9couverte Sennheiser G4"}),"\n",(0,s.jsx)(n.h3,{id:"en-r\xe9sum\xe9",children:"En r\xe9sum\xe9"}),"\n",(0,s.jsx)(n.p,{children:"Les appareils Sennheiser G4 IEM utilisent un protocole propri\xe9taire bas\xe9 sur UDP multicast qui diff\xe8re des m\xe9thodes mDNS standard. RF Go impl\xe9mente un m\xe9canisme sp\xe9cifique pour d\xe9couvrir ces appareils."}),"\n",(0,s.jsx)(n.h3,{id:"processus-de-d\xe9couverte-g4",children:"Processus de D\xe9couverte G4"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant App as RF Go\r\n    participant Network as R\xe9seau Local\r\n    participant G4 as Sennheiser G4 IEM\r\n\r\n    App->>Network: Paquet Discovery UDP (port 8133, adresse 224.0.0.251)\r\n    Note right of App: Format: [servicecommand]devinfo\r\n    Network->>G4: Diffusion du paquet de d\xe9couverte\r\n    G4->>Network: R\xe9ponse UDP (port 53212)\r\n    Note right of G4: Contient Model=, ID=, IPA=\r\n    Network->>App: R\xe9ception de la r\xe9ponse\r\n    App->>App: Extraction des informations et identification du mod\xe8le"}),"\n",(0,s.jsx)(n.h3,{id:"impl\xe9mentations",children:"Impl\xe9mentations"}),"\n",(0,s.jsxs)(n.p,{children:["RF Go impl\xe9mente cette d\xe9couverte via une m\xe9thode sp\xe9cialis\xe9e dans le ",(0,s.jsx)(n.code,{children:"DiscoveryService"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'private async Task TriggerSennheiserG4DiscoveryAsync(CancellationToken cancellationToken)\r\n{\r\n    // Configuration du client UDP pour la d\xe9couverte G4\r\n    _g4UdpClient = new UdpClient();\r\n    _g4UdpClient.Client.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, true);\r\n    \r\n    // Liaison au port 8133 et jointure au groupe multicast\r\n    IPEndPoint localEndpoint = new IPEndPoint(IPAddress.Any, 8133);\r\n    _g4UdpClient.Client.Bind(localEndpoint);\r\n    _g4UdpClient.JoinMulticastGroup(IPAddress.Parse("224.0.0.251"));\r\n    \r\n    // Envoi de la commande de d\xe9couverte\r\n    string commandStr = "[servicecommand]devinfo\\r\\n";\r\n    // ... construction et envoi du paquet\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"format-des-paquets-g4",children:"Format des Paquets G4"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Paquet de d\xe9couverte"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Commence par un en-t\xeate sp\xe9cifique"}),"\n",(0,s.jsxs)(n.li,{children:["Contient la commande ",(0,s.jsx)(n.code,{children:"[servicecommand]devinfo"})]}),"\n",(0,s.jsx)(n.li,{children:"Taille totale de 1035 octets avec un pied de page sp\xe9cifique"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"R\xe9ponse G4"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Contient les champs ",(0,s.jsx)(n.code,{children:"Model="}),", ",(0,s.jsx)(n.code,{children:"ID="})," et ",(0,s.jsx)(n.code,{children:"IPA="})]}),"\n",(0,s.jsxs)(n.li,{children:["L'adresse IP source est utilis\xe9e si le champ ",(0,s.jsx)(n.code,{children:"IPA="})," n'est pas valide"]}),"\n",(0,s.jsx)(n.li,{children:"Le format de la r\xe9ponse est analys\xe9 pour extraire les informations de l'appareil"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"protocoles-sp\xe9cifiques-aux-fabricants",children:"Protocoles Sp\xe9cifiques aux Fabricants"}),"\n",(0,s.jsx)(n.h3,{id:"sennheiser",children:"Sennheiser"}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte-standard",children:"D\xe9couverte Standard"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Utilise mDNS avec la requ\xeate ",(0,s.jsx)(n.code,{children:"_ssc._udp.local"})]}),"\n",(0,s.jsx)(n.li,{children:"Port par d\xe9faut : variable selon les mod\xe8les"}),"\n",(0,s.jsx)(n.li,{children:"Format des enregistrements TXT sp\xe9cifiques"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte-ewdx",children:"D\xe9couverte EWDX"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Utilise mDNS avec la requ\xeate ",(0,s.jsx)(n.code,{children:"_ewd._http.local"})]}),"\n",(0,s.jsx)(n.li,{children:"Communication via API REST HTTP"}),"\n",(0,s.jsx)(n.li,{children:"Identification des mod\xe8les via les enregistrements DNS"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"shure",children:"Shure"}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte-slp-service-location-protocol",children:"D\xe9couverte SLP (Service Location Protocol)"}),"\n",(0,s.jsx)(n.p,{children:"Les appareils Shure utilisent le protocole SLP (Service Location Protocol) pour la d\xe9couverte sur le r\xe9seau :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Adresse multicast : 239.255.254.253"}),"\n",(0,s.jsx)(n.li,{children:"Port : 8427"}),"\n",(0,s.jsx)(n.li,{children:"Format des paquets : Version 2 du protocole SLP"}),"\n"]}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant App as RF Go\r\n    participant Network as R\xe9seau Local\r\n    participant Shure as Appareil Shure\r\n\r\n    App->>Network: Rejoindre groupe multicast 239.255.254.253:8427\r\n    Network->>Shure: Diffusion des paquets SLP\r\n    Shure->>Network: R\xe9ponse SLP (Function ID 7)\r\n    Network->>App: R\xe9ception de la r\xe9ponse\r\n    App->>App: Extraction des informations (acn-uacn, cid)"}),"\n",(0,s.jsx)(n.h4,{id:"format-des-paquets-slp",children:"Format des Paquets SLP"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"En-t\xeate SLP"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Version : 2"}),"\n",(0,s.jsx)(n.li,{children:"Function ID : 7 (Service Reply)"}),"\n",(0,s.jsxs)(n.li,{children:["Contient les champs :","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"acn-uacn"}),' : Mod\xe8le et code de fr\xe9quence (ex: "ULXD4D H51 REV2")']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cid"})," : Identifiant unique de l'appareil"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Extraction des Informations"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Mod\xe8le : Extrait du champ ",(0,s.jsx)(n.code,{children:"acn-uacn"})]}),"\n",(0,s.jsxs)(n.li,{children:["ID S\xe9rie : Extrait du champ ",(0,s.jsx)(n.code,{children:"cid"})]}),"\n",(0,s.jsxs)(n.li,{children:["Adresse IP : Source du paquet ou champ ",(0,s.jsx)(n.code,{children:"esta.dmp/"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"appareils-support\xe9s",children:"Appareils Support\xe9s"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ULXD4D (2 canaux)"}),"\n",(0,s.jsx)(n.li,{children:"ULXD4Q (4 canaux)"}),"\n",(0,s.jsx)(n.li,{children:"ULXD4 (1 canal)"}),"\n",(0,s.jsx)(n.li,{children:"AD4D (2 canaux)"}),"\n",(0,s.jsx)(n.li,{children:"AD4Q (4 canaux)"}),"\n",(0,s.jsx)(n.li,{children:"AD610 (2 canaux)"}),"\n",(0,s.jsx)(n.li,{children:"AXT400/600/610/630/900"}),"\n",(0,s.jsx)(n.li,{children:"P10T"}),"\n",(0,s.jsx)(n.li,{children:"SBRC"}),"\n",(0,s.jsx)(n.li,{children:"SBC220/240/840/840M"}),"\n",(0,s.jsx)(n.li,{children:"PSM1000"}),"\n",(0,s.jsx)(n.li,{children:"UR4D"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"d\xe9tection-et-attribution-des-gestionnaires-dappareils",children:"D\xe9tection et Attribution des Gestionnaires d'Appareils"}),"\n",(0,s.jsx)(n.p,{children:"RF Go utilise une approche modulaire pour attribuer les gestionnaires appropri\xe9s \xe0 chaque appareil d\xe9couvert :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'foreach (var handler in _handlers)\r\n{\r\n    if (handler.CanHandle(serviceName))\r\n    {\r\n        // D\xe9finir d\'abord la marque pour pouvoir l\'utiliser pour trouver le gestionnaire appropri\xe9\r\n        deviceInfo.Brand = handler.Brand;\r\n        \r\n        // Trouver le meilleur gestionnaire (en cas de plusieurs gestionnaires pour la m\xeame marque)\r\n        var bestHandler = handler;\r\n        if (serviceName.Contains("G4") || serviceName.Contains("IEM"))\r\n        {\r\n            // Essayer d\'obtenir un gestionnaire sp\xe9cifique G4 si c\'est un appareil G4\r\n            var g4Handler = _handlers.FirstOrDefault(h => \r\n                h.Brand == handler.Brand && \r\n                h.GetType().Name.Contains("G4") && \r\n                h.CanHandle(serviceName));\r\n                \r\n            if (g4Handler != null)\r\n            {\r\n                bestHandler = g4Handler;\r\n            }\r\n        }\r\n        \r\n        await bestHandler.HandleDevice(deviceInfo);\r\n        break;\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-du-r\xe9seau",children:"Configuration du R\xe9seau"}),"\n",(0,s.jsx)(n.h3,{id:"pr\xe9requis",children:"Pr\xe9requis"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"R\xe9seau local avec multicast activ\xe9"}),"\n",(0,s.jsx)(n.li,{children:"Pas de pare-feu bloquant les ports mDNS (5353/udp)"}),"\n",(0,s.jsxs)(n.li,{children:["Ports sp\xe9cifiques ouverts :","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"8133/udp pour la d\xe9couverte Sennheiser G4"}),"\n",(0,s.jsx)(n.li,{children:"53212/udp pour la communication avec les appareils G4"}),"\n",(0,s.jsx)(n.li,{children:"Ports standards pour les autres appareils"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"d\xe9pannage",children:"D\xe9pannage"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"V\xe9rifier que le multicast est activ\xe9 sur le r\xe9seau"}),"\n",(0,s.jsx)(n.li,{children:"Confirmer que les ports n\xe9cessaires sont ouverts"}),"\n",(0,s.jsx)(n.li,{children:"V\xe9rifier les logs de d\xe9couverte pour les erreurs"}),"\n",(0,s.jsx)(n.li,{children:"Tester la connectivit\xe9 avec les appareils individuellement"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"s\xe9curit\xe9",children:"S\xe9curit\xe9"}),"\n",(0,s.jsx)(n.h3,{id:"consid\xe9rations",children:"Consid\xe9rations"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"La d\xe9couverte mDNS est limit\xe9e au r\xe9seau local"}),"\n",(0,s.jsx)(n.li,{children:"Les communications avec les appareils doivent \xeatre s\xe9curis\xe9es"}),"\n",(0,s.jsx)(n.li,{children:"Utilisation de TLS pour les API REST quand disponible"}),"\n",(0,s.jsx)(n.li,{children:"Protocoles propri\xe9taires peuvent manquer de s\xe9curit\xe9"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"bonnes-pratiques",children:"Bonnes Pratiques"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Limiter la d\xe9couverte au r\xe9seau local"}),"\n",(0,s.jsx)(n.li,{children:"Valider les certificats des appareils"}),"\n",(0,s.jsx)(n.li,{children:"Utiliser des identifiants s\xe9curis\xe9s"}),"\n",(0,s.jsx)(n.li,{children:"Journaliser les activit\xe9s de d\xe9couverte"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);