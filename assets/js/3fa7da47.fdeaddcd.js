"use strict";(self.webpackChunkrf_go_docs=self.webpackChunkrf_go_docs||[]).push([[4382],{3281:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"architecture/design-patterns","title":"Patterns de conception","description":"Attention cette section doit encore \xeatre revue","source":"@site/docs/architecture/design-patterns.md","sourceDirName":"architecture","slug":"/architecture/design-patterns","permalink":"/RF_Go/architecture/design-patterns","draft":false,"unlisted":false,"editUrl":"https://github.com/Beatwen/RF_Go/tree/main/docs/architecture/design-patterns.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture de d\xe9ploiement","permalink":"/RF_Go/architecture/deployment"},"next":{"title":"Architecture des donn\xe9es","permalink":"/RF_Go/architecture/data-architecture"}}');var s=r(4848),i=r(8453);const a={},l="Patterns de conception",c={},d=[{value:"Attention cette section doit encore \xeatre revue",id:"attention-cette-section-doit-encore-\xeatre-revue",level:2},{value:"<strong>Vue d&#39;ensemble</strong>",id:"vue-densemble",level:2},{value:"<strong>Patterns architecturaux</strong>",id:"patterns-architecturaux",level:2},{value:"<strong>1. MVVM (Model-View-ViewModel)</strong>",id:"1-mvvm-model-view-viewmodel",level:3},{value:"<strong>2. Repository Pattern</strong>",id:"2-repository-pattern",level:3},{value:"\ud83d\udd27 <strong>Patterns comportementaux</strong>",id:"-patterns-comportementaux",level:2},{value:"<strong>3. Observer Pattern</strong>",id:"3-observer-pattern",level:3},{value:"<strong>4. Command Pattern</strong>",id:"4-command-pattern",level:3},{value:"<strong>Patterns cr\xe9ationnels</strong>",id:"patterns-cr\xe9ationnels",level:2},{value:"<strong>5. Factory Pattern (Implicite)</strong>",id:"5-factory-pattern-implicite",level:3},{value:"<strong>6. Dependency Injection</strong>",id:"6-dependency-injection",level:3},{value:"<strong>Patterns structurels</strong>",id:"patterns-structurels",level:2},{value:"<strong>7. Adapter Pattern</strong>",id:"7-adapter-pattern",level:3},{value:"<strong>8. Strategy Pattern</strong>",id:"8-strategy-pattern",level:3},{value:"<strong>Patterns sp\xe9cifiques au domaine RF</strong>",id:"patterns-sp\xe9cifiques-au-domaine-rf",level:2},{value:"<strong>9. State Pattern (Implicite)</strong>",id:"9-state-pattern-implicite",level:3},{value:"<strong>10. Builder Pattern (Configuration)</strong>",id:"10-builder-pattern-configuration",level:3},{value:"<strong>Patterns \xe9mergents</strong>",id:"patterns-\xe9mergents",level:2},{value:"<strong>11. Data Transfer Object (DTO)</strong>",id:"11-data-transfer-object-dto",level:3},{value:"<strong>12. Event Sourcing (Partiel)</strong>",id:"12-event-sourcing-partiel",level:3},{value:"<strong>Analyse des patterns</strong>",id:"analyse-des-patterns",level:2},{value:"<strong>M\xe9trique de qualit\xe9</strong>",id:"m\xe9trique-de-qualit\xe9",level:3},{value:"<strong>Points forts observ\xe9s</strong>",id:"points-forts-observ\xe9s",level:3},{value:"<strong>\xc9volutions possibles</strong>",id:"\xe9volutions-possibles",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"patterns-de-conception",children:"Patterns de conception"})}),"\n",(0,s.jsx)(n.h2,{id:"attention-cette-section-doit-encore-\xeatre-revue",children:"Attention cette section doit encore \xeatre revue"}),"\n",(0,s.jsx)(n.h2,{id:"vue-densemble",children:(0,s.jsx)(n.strong,{children:"Vue d'ensemble"})}),"\n",(0,s.jsx)(n.p,{children:"RF.Go impl\xe9mente plusieurs patterns de conception pour assurer une architecture modulaire, extensible et maintenable. Cette analyse se base sur l'impl\xe9mentation r\xe9elle du code source."}),"\n",(0,s.jsx)(n.h2,{id:"patterns-architecturaux",children:(0,s.jsx)(n.strong,{children:"Patterns architecturaux"})}),"\n",(0,s.jsx)(n.h3,{id:"1-mvvm-model-view-viewmodel",children:(0,s.jsx)(n.strong,{children:"1. MVVM (Model-View-ViewModel)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impl\xe9mentation observ\xe9e"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"// ViewModels avec CommunityToolkit.Mvvm\r\npublic partial class DevicesViewModel : ObservableObject\r\n{\r\n    [ObservableProperty]\r\n    private ObservableCollection<RFDevice> _devices = new();\r\n    \r\n    [ObservableProperty]\r\n    private RFDevice _operatingDevice = new();\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Structure"})," :"]}),"\n",(0,s.jsx)(n.mermaid,{value:'graph TB\r\n    subgraph "View Layer"\r\n        V[Blazor Components]\r\n    end\r\n    \r\n    subgraph "ViewModel Layer"\r\n        DVM[DevicesViewModel]\r\n        GVM[GroupsViewModel]\r\n        SVM[ScansViewModel]\r\n        FVM[FrequencyDataViewModel]\r\n    end\r\n    \r\n    subgraph "Model Layer"\r\n        M[RFDevice, RFGroup, ScanData]\r\n    end\r\n    \r\n    V --\x3e DVM\r\n    V --\x3e GVM\r\n    V --\x3e SVM\r\n    V --\x3e FVM\r\n    DVM --\x3e M\r\n    GVM --\x3e M\r\n    SVM --\x3e M\r\n    FVM --\x3e M'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Avantages observ\xe9s"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 S\xe9paration claire des responsabilit\xe9s"}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 Data binding automatique avec ",(0,s.jsx)(n.code,{children:"ObservableProperty"})]}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Testabilit\xe9 des ViewModels ind\xe9pendamment de l'UI"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"2-repository-pattern",children:(0,s.jsx)(n.strong,{children:"2. Repository Pattern"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impl\xe9mentation via DatabaseContext"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DatabaseContext : IAsyncDisposable\r\n{\r\n    public async Task<IEnumerable<TTable>> GetAllAsync<TTable>()\r\n    public async Task<bool> AddItemAsync<TTable>(TTable item)\r\n    public async Task<bool> UpdateItemAsync<TTable>(TTable item)\r\n    public async Task<bool> DeleteItemAsync<TTable>(TTable item)\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Abstraction des donn\xe9es"})," :"]}),"\n",(0,s.jsx)(n.mermaid,{value:"graph LR\r\n    VM[ViewModels] --\x3e DC[DatabaseContext]\r\n    DC --\x3e SQL[SQLite Database]\r\n    DC --\x3e |Generic Methods| M[Models]"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Utilisation dans les ViewModels"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public async Task LoadDevicesAsync()\r\n{\r\n    var devices = await _context.GetAllAsync<RFDevice>();\r\n    // Traitement...\r\n}\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"-patterns-comportementaux",children:["\ud83d\udd27 ",(0,s.jsx)(n.strong,{children:"Patterns comportementaux"})]}),"\n",(0,s.jsx)(n.h3,{id:"3-observer-pattern",children:(0,s.jsx)(n.strong,{children:"3. Observer Pattern"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Impl\xe9mentation avec Events"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DiscoveryService\r\n{\r\n    public event EventHandler<DeviceDiscoveredEventArgs> DeviceDiscovered;\r\n    \r\n    private void OnServiceDiscovered(object sender, ServiceInstanceEventArgs e)\r\n    {\r\n        DeviceDiscovered?.Invoke(this, deviceInfo);\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Notification de changements"})," :"]}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant DS as DiscoveryService\r\n    participant DH as DeviceHandler\r\n    participant VM as DevicesViewModel\r\n    participant UI as Blazor UI\r\n    \r\n    DS->>DH: Device Discovered\r\n    DH->>DS: DeviceDiscoveredEventArgs\r\n    DS->>VM: Event Notification\r\n    VM->>UI: PropertyChanged"}),"\n",(0,s.jsx)(n.h3,{id:"4-command-pattern",children:(0,s.jsx)(n.strong,{children:"4. Command Pattern"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Abstraction des protocoles"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public interface IDeviceCommandSet\r\n{\r\n    string GetModelCommand();\r\n    string GetFrequencyCodeCommand();\r\n    string SetChannelFrequencyCommand(int channel, int frequency);\r\n}\r\n\r\n// Impl\xe9mentations sp\xe9cialis\xe9es\r\npublic class SennheiserCommandSet : IDeviceCommandSet\r\npublic class SennheiserG4CommandSet : IDeviceCommandSet  \r\npublic class ShureCommandSet : IDeviceCommandSet\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Utilisation polymorphe"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DeviceMappingService\r\n{\r\n    private IDeviceCommandSet _commandSet;\r\n    \r\n    private IDeviceHandler GetAppropriateHandler(RFDevice device)\r\n    {\r\n        // S\xe9lection dynamique du bon handler\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"patterns-cr\xe9ationnels",children:(0,s.jsx)(n.strong,{children:"Patterns cr\xe9ationnels"})}),"\n",(0,s.jsx)(n.h3,{id:"5-factory-pattern-implicite",children:(0,s.jsx)(n.strong,{children:"5. Factory Pattern (Implicite)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Cr\xe9ation dynamique de handlers"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DiscoveryService\r\n{\r\n    private List<IDeviceHandler> _handlers;\r\n    \r\n    private IDeviceHandler GetAppropriateHandlerForType(string brand, string type)\r\n    {\r\n        return _handlers.FirstOrDefault(h => h.CanHandle(serviceName));\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Handlers sp\xe9cialis\xe9s"})," :"]}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TB\r\n    IH[IDeviceHandler Interface]\r\n    IH -.-> SH[SennheiserDeviceHandler]\r\n    IH -.-> G4H[SennheiserG4DeviceHandler] \r\n    IH -.-> SHU[ShureDeviceHandler]\r\n    \r\n    SH --\x3e SC[SennheiserCommandSet]\r\n    G4H --\x3e G4C[SennheiserG4CommandSet]\r\n    SHU --\x3e SHUC[ShureCommandSet]"}),"\n",(0,s.jsx)(n.h3,{id:"6-dependency-injection",children:(0,s.jsx)(n.strong,{children:"6. Dependency Injection"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Configuration des services"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"// Injection dans les constructeurs\r\npublic class DevicesViewModel(DatabaseContext context) : ObservableObject\r\n{\r\n    private readonly DatabaseContext _context = context ?? throw new ArgumentNullException(nameof(context));\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Avantages"})," :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2705 Couplage faible entre composants"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Facilite les tests unitaires"}),"\n",(0,s.jsx)(n.li,{children:"\u2705 Configuration centralis\xe9e"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"patterns-structurels",children:(0,s.jsx)(n.strong,{children:"Patterns structurels"})}),"\n",(0,s.jsx)(n.h3,{id:"7-adapter-pattern",children:(0,s.jsx)(n.strong,{children:"7. Adapter Pattern"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Adaptation des formats r\xe9seau"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DeviceMappingService\r\n{\r\n    public RFDevice CastDeviceDiscoveredToRFDevice(DeviceDiscoveredEventArgs device)\r\n    {\r\n        // Conversion format r\xe9seau \u2192 mod\xe8le interne\r\n        return new RFDevice\r\n        {\r\n            Name = device.Name,\r\n            Brand = device.Brand,\r\n            SerialNumber = device.SerialNumber,\r\n            IpAddress = device.IPAddress\r\n        };\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"8-strategy-pattern",children:(0,s.jsx)(n.strong,{children:"8. Strategy Pattern"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Gestion multi-protocoles"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public interface IDeviceHandler\r\n{\r\n    string Brand { get; }\r\n    bool CanHandle(string serviceName);\r\n    Task<(bool IsEqual, bool IsNotResponding)> IsDevicePendingSync(DeviceDiscoveredEventArgs deviceInfo);\r\n}\r\n\r\n// Strat\xe9gies par marque\r\n- SennheiserDeviceHandler : UDP Port 45\r\n- SennheiserG4DeviceHandler : UDP avec G4Commands\r\n- ShureDeviceHandler : TCP Port 2202\n"})}),"\n",(0,s.jsx)(n.h2,{id:"patterns-sp\xe9cifiques-au-domaine-rf",children:(0,s.jsx)(n.strong,{children:"Patterns sp\xe9cifiques au domaine RF"})}),"\n",(0,s.jsx)(n.h3,{id:"9-state-pattern-implicite",children:(0,s.jsx)(n.strong,{children:"9. State Pattern (Implicite)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\xc9tats des devices"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class RFDevice\r\n{\r\n    public bool IsSynced { get; set; }\r\n    public bool IsOnline { get; set; }\r\n    public bool PendingSync { get; set; }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Transitions d'\xe9tat"})," :"]}),"\n",(0,s.jsx)(n.mermaid,{value:"stateDiagram-v2\r\n    [*] --\x3e Offline\r\n    Offline --\x3e Discovered : Device Found\r\n    Discovered --\x3e Online : Connection OK\r\n    Online --\x3e Synced : Data Match\r\n    Online --\x3e PendingSync : Data Mismatch\r\n    PendingSync --\x3e Synced : Sync Complete\r\n    Synced --\x3e PendingSync : Data Changed\r\n    Online --\x3e Offline : Connection Lost"}),"\n",(0,s.jsx)(n.h3,{id:"10-builder-pattern-configuration",children:(0,s.jsx)(n.strong,{children:"10. Builder Pattern (Configuration)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Construction de fr\xe9quences"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class RFChannel\r\n{\r\n    public void SetRandomFrequency(\r\n        HashSet<int> usedFreqs, \r\n        HashSet<int> intermod3rd,\r\n        HashSet<int> intermod5th,\r\n        HashSet<int> intermod7th,\r\n        HashSet<int> intermod9th,\r\n        HashSet<int> intermod3tx,\r\n        List<(float Start, float End)> excludedRanges)\r\n    {\r\n        // Construction complexe avec multiples contraintes\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"patterns-\xe9mergents",children:(0,s.jsx)(n.strong,{children:"Patterns \xe9mergents"})}),"\n",(0,s.jsx)(n.h3,{id:"11-data-transfer-object-dto",children:(0,s.jsx)(n.strong,{children:"11. Data Transfer Object (DTO)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"S\xe9rialisation JSON"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class FrequencyData\r\n{\r\n    [Ignore]\r\n    public HashSet<int> UsedFrequencies { get; set; }\r\n    \r\n    public string UsedFrequenciesSerialized\r\n    {\r\n        get => JsonSerializer.Serialize(UsedFrequencies);\r\n        set => UsedFrequencies = JsonSerializer.Deserialize<HashSet<int>>(value);\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"12-event-sourcing-partiel",children:(0,s.jsx)(n.strong,{children:"12. Event Sourcing (Partiel)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Tracking des changements"})," :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class DevicesViewModel\r\n{\r\n    public event EventHandler DevicesChanged;\r\n    \r\n    private void OnDevicesChanged()\r\n    {\r\n        DevicesChanged?.Invoke(this, EventArgs.Empty);\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"analyse-des-patterns",children:(0,s.jsx)(n.strong,{children:"Analyse des patterns"})}),"\n",(0,s.jsx)(n.h3,{id:"m\xe9trique-de-qualit\xe9",children:(0,s.jsx)(n.strong,{children:"M\xe9trique de qualit\xe9"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Pattern"}),(0,s.jsx)(n.th,{children:"Complexit\xe9"}),(0,s.jsx)(n.th,{children:"Maintenabilit\xe9"}),(0,s.jsx)(n.th,{children:"Extensibilit\xe9"}),(0,s.jsx)(n.th,{children:"Usage"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"MVVM"})}),(0,s.jsx)(n.td,{children:"Moyenne"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"G\xe9n\xe9ralis\xe9"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Repository"})}),(0,s.jsx)(n.td,{children:"Faible"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"Centralis\xe9"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Command"})}),(0,s.jsx)(n.td,{children:"Faible"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"Protocoles"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Strategy"})}),(0,s.jsx)(n.td,{children:"Moyenne"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"Handlers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Observer"})}),(0,s.jsx)(n.td,{children:"Faible"}),(0,s.jsx)(n.td,{children:"\u2705 Moyenne"}),(0,s.jsx)(n.td,{children:"\u2705 \xc9lev\xe9e"}),(0,s.jsx)(n.td,{children:"Events"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"points-forts-observ\xe9s",children:(0,s.jsx)(n.strong,{children:"Points forts observ\xe9s"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Coh\xe9rence architecturale"})," : Patterns utilis\xe9s de mani\xe8re consistante"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensibilit\xe9"})," : Facilit\xe9 d'ajout de nouvelles marques via interfaces"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Testabilit\xe9"})," : Injection de d\xe9pendances et s\xe9paration des couches"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Maintenabilit\xe9"})," : Code organis\xe9 selon les responsabilit\xe9s"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\xe9volutions-possibles",children:(0,s.jsx)(n.strong,{children:"\xc9volutions possibles"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mediator Pattern"})," : Pour d\xe9coupler davantage les ViewModels"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Unit of Work"})," : Pour les transactions complexes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Chain of Responsibility"})," : Pour le traitement des erreurs r\xe9seau"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Cette architecture pattern-driven contribue \xe0 la robustesse et \xe0 l'\xe9volutivit\xe9 de RF.Go dans un domaine techniquement complexe."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);