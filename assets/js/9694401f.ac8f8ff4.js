"use strict";(self.webpackChunkrf_go_docs=self.webpackChunkrf_go_docs||[]).push([[1060],{5663:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"architecture/class-diagram","title":"Diagramme de Classes","description":"Vue d\'ensemble","source":"@site/docs/architecture/class-diagram.md","sourceDirName":"architecture","slug":"/architecture/class-diagram","permalink":"/RF_Go/docs/architecture/class-diagram","draft":false,"unlisted":false,"editUrl":"https://github.com/Beatwen/RF_Go/tree/main/docs/architecture/class-diagram.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Flux de Donn\xe9es","permalink":"/RF_Go/docs/architecture/data-flow"},"next":{"title":"Use Cases","permalink":"/RF_Go/docs/architecture/use-cases"}}');var s=r(4848),l=r(8453);const d={},a="Diagramme de Classes",c={},t=[{value:"Vue d&#39;ensemble",id:"vue-densemble",level:2},{value:"Description des Classes",id:"description-des-classes",level:2},{value:"Mod\xe8les de Base de Donn\xe9es",id:"mod\xe8les-de-base-de-donn\xe9es",level:3},{value:"Services",id:"services",level:3},{value:"Handlers et Commandes",id:"handlers-et-commandes",level:3}];function o(e){const n={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"diagramme-de-classes",children:"Diagramme de Classes"})}),"\n",(0,s.jsx)(n.h2,{id:"vue-densemble",children:"Vue d'ensemble"}),"\n",(0,s.jsx)(n.p,{children:"Ce diagramme pr\xe9sente la structure compl\xe8te des classes de RF Go, incluant les mod\xe8les de donn\xe9es, les services, les handlers et les composants r\xe9seau."}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\r\n    %% Mod\xe8les de Base de Donn\xe9es\r\n    class RFDevice {\r\n        +int ID\r\n        +string SerialNumber\r\n        +bool Selected\r\n        +string Brand\r\n        +string Model\r\n        +string Name\r\n        +string Frequency\r\n        +List~int~ Range\r\n        +string RangeSerialized\r\n        +List~RFChannel~ Channels\r\n        +string ChannelsSerialized\r\n        +string IpAddress\r\n        +string Calendar\r\n        +string Stage\r\n        +bool IsSynced\r\n        +bool IsOnline\r\n        +bool PendingSync\r\n        +int NumberOfChannels\r\n        +int GroupID\r\n        +RFGroup Group\r\n        +int Step\r\n        +Clone()\r\n        +Validate()\r\n        +OnPropertyChanged()\r\n    }\r\n\r\n    class RFChannel {\r\n        +int ID\r\n        +bool Selected\r\n        +int chanNumber\r\n        +int Frequency\r\n        +List~int~ Range\r\n        +string RangeSerialized\r\n        +int Step\r\n        +int SelfSpacing\r\n        +int ThirdOrderSpacing\r\n        +bool ThirdOrderSpacingEnable\r\n        +int FifthOrderSpacing\r\n        +bool FifthOrderSpacingEnable\r\n        +int SeventhOrderSpacing\r\n        +bool SeventhOrderSpacingEnable\r\n        +int NinthOrderSpacing\r\n        +bool NinthOrderSpacingEnable\r\n        +int ThirdOrderSpacing3Tx\r\n        +bool ThirdOrderSpacing3TxEnable\r\n        +bool Checked\r\n        +string ChannelName\r\n        +bool IsLocked\r\n        +SetRandomFrequency()\r\n        +GetRandomFrequency()\r\n        +LoopForFreeFrequency()\r\n        +CheckFreeFrequency()\r\n        +SpacingEnable()\r\n        +CalculAllIntermod()\r\n        +Clone()\r\n    }\r\n\r\n    class RFGroup {\r\n        +int ID\r\n        +string Name\r\n        +List~TimePeriod~ TimePeriods\r\n        +string TimePeriodsSerialized\r\n        +List~RFDevice~ Devices\r\n        +AddTimePeriod()\r\n        +DeleteTimePeriod()\r\n        +AddDevice()\r\n        +RemoveDevice()\r\n        +Clone()\r\n    }\r\n\r\n    class TimePeriod {\r\n        +int ID\r\n        +string Name\r\n        +DateTime StartTime\r\n        +DateTime EndTime\r\n        +TimeSpan? StartTimeSpan\r\n        +TimeSpan? EndTimeSpan\r\n        +DateRange Range\r\n        +UpdateRange()\r\n        +ToString()\r\n    }\r\n\r\n    class ExclusionChannel {\r\n        +int ID\r\n        +string Country\r\n        +int ChannelNumber\r\n        +float StartFrequency\r\n        +float EndFrequency\r\n        +string Type\r\n        +bool Exclude\r\n        +float ChannelWidth\r\n    }\r\n\r\n    class CountryChannelConfig {\r\n        +int ID\r\n        +string Country\r\n        +int ChannelWidth\r\n        +int StartChannel\r\n        +int EndChannel\r\n        +string DefaultFrequencyRange\r\n    }\r\n\r\n    class FrequencyData {\r\n        +int ID\r\n        +HashSet~int~ UsedFrequencies\r\n        +string UsedFrequenciesSerialized\r\n        +HashSet~int~ TwoTX3rdOrder\r\n        +string TwoTX3rdOrderSerialized\r\n        +HashSet~int~ TwoTX5rdOrder\r\n        +string TwoTX5rdOrderSerialized\r\n        +HashSet~int~ TwoTX7rdOrder\r\n        +string TwoTX7rdOrderSerialized\r\n        +HashSet~int~ TwoTX9rdOrder\r\n        +string TwoTX9rdOrderSerialized\r\n        +HashSet~int~ ThreeTX3rdOrder\r\n        +string ThreeTX3rdOrderSerialized\r\n    }\r\n\r\n    class ChannelInfo {\r\n        +int ChannelNumber\r\n        +string Name\r\n        +string Frequency\r\n    }\r\n\r\n    class DeviceDiscoveredEventArgs {\r\n        +string Name\r\n        +string Brand\r\n        +string Type\r\n        +string SerialNumber\r\n        +string IPAddress\r\n        +string Frequency\r\n        +List~ChannelInfo~ Channels\r\n        +bool IsSynced\r\n    }\r\n\r\n    %% Services\r\n    class RFDeviceService {\r\n        +List~RFDevice~ Devices\r\n    }\r\n\r\n    class RFChannelService {\r\n        +List~RFChannel~ Channels\r\n    }\r\n\r\n    class FrequencyDataService {\r\n        +FrequencyData FrequencyData\r\n    }\r\n\r\n    class DeviceMappingService {\r\n        +CastDeviceDiscoveredToRFDevice()\r\n        +FirstSyncToDevice()\r\n        +SyncToDevice()\r\n        +FirstSyncFromDevice()\r\n        +SyncFromDevice()\r\n        +SyncAllFromDevice()\r\n        +SyncAllToDevice()\r\n        +FetchDeviceData()\r\n    }\r\n\r\n    class DiscoveryService {\r\n        +List~DeviceDiscoveredEventArgs~ DiscoveredDevices\r\n        +StartDiscovery()\r\n        +StopDiscovery()\r\n        +DetectDevicesAsync()\r\n        +CheckDeviceSync()\r\n        +TriggerSennheiserDiscovery()\r\n    }\r\n\r\n    class IDeviceHandler {\r\n        <<interface>>\r\n        +string Brand\r\n        +CanHandle()\r\n        +HandleDevice()\r\n        +IsDevicePendingSync()\r\n    }\r\n\r\n    class SennheiserHandler {\r\n        +HandleDevice()\r\n        +IsDevicePendingSync()\r\n        +SendCommandAndExtractValueAsync()\r\n    }\r\n\r\n    class IDeviceCommandSet {\r\n        <<interface>>\r\n        +GetModelCommand()\r\n        +GetFrequencyCodeCommand()\r\n        +GetSerialCommand()\r\n        +GetChannelFrequencyCommand()\r\n        +GetChannelNameCommand()\r\n        +GetSignalQualityCommand()\r\n        +SetChannelFrequencyCommand()\r\n        +SetChannelNameCommand()\r\n        +SetSignalQualityCommand()\r\n    }\r\n\r\n    class SennheiserCommandSet {\r\n        +GetModelCommand()\r\n        +GetFrequencyCodeCommand()\r\n        +GetSerialCommand()\r\n        +GetChannelFrequencyCommand()\r\n        +GetChannelNameCommand()\r\n        +GetSignalQualityCommand()\r\n        +SetChannelFrequencyCommand()\r\n        +SetChannelNameCommand()\r\n        +SetSignalQualityCommand()\r\n    }\r\n\r\n    %% Relations\r\n    RFDevice "1" -- "*" RFChannel\r\n    RFDevice "many" -- "1" RFGroup\r\n    RFGroup "1" -- "*" TimePeriod\r\n    RFGroup "1" -- "*" RFDevice\r\n    RFDeviceService "1" -- "*" RFDevice\r\n    RFChannelService "1" -- "*" RFChannel\r\n    FrequencyDataService "1" -- "1" FrequencyData\r\n    DeviceMappingService "1" -- "1" RFDevice\r\n    DeviceMappingService "1" -- "1" DeviceDiscoveredEventArgs\r\n    DiscoveryService "1" -- "*" DeviceDiscoveredEventArgs\r\n    DiscoveryService "1" -- "*" IDeviceHandler\r\n    DeviceDiscoveredEventArgs "1" -- "*" ChannelInfo\r\n    SennheiserHandler ..|> IDeviceHandler\r\n    SennheiserCommandSet ..|> IDeviceCommandSet'}),"\n",(0,s.jsx)(n.h2,{id:"description-des-classes",children:"Description des Classes"}),"\n",(0,s.jsx)(n.h3,{id:"mod\xe8les-de-base-de-donn\xe9es",children:"Mod\xe8les de Base de Donn\xe9es"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"RFDevice"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente un appareil audio sans fil"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les informations de base (marque, mod\xe8le, nom)"}),"\n",(0,s.jsx)(n.li,{children:"Contient la liste des canaux RF"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re l'\xe9tat de synchronisation et de connexion"}),"\n",(0,s.jsx)(n.li,{children:"Impl\xe9mente INotifyPropertyChanged pour les mises \xe0 jour UI"}),"\n",(0,s.jsx)(n.li,{children:"Validation des donn\xe9es et clonage"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"RFChannel"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente un canal RF avec ses propri\xe9t\xe9s"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les espacements et les intermodulations"}),"\n",(0,s.jsx)(n.li,{children:"Calcul des fr\xe9quences disponibles"}),"\n",(0,s.jsx)(n.li,{children:"Validation des fr\xe9quences et des espacements"}),"\n",(0,s.jsx)(n.li,{children:"Gestion des verrouillages de fr\xe9quences"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"RFGroup"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente un groupe d'appareils"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les p\xe9riodes de temps"}),"\n",(0,s.jsx)(n.li,{children:"Contient la liste des appareils"}),"\n",(0,s.jsx)(n.li,{children:"Gestion des ajouts/suppressions d'appareils"}),"\n",(0,s.jsx)(n.li,{children:"S\xe9rialisation des p\xe9riodes de temps"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"TimePeriod"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente une p\xe9riode de temps"}),"\n",(0,s.jsx)(n.li,{children:"Gestion des dates de d\xe9but et de fin"}),"\n",(0,s.jsx)(n.li,{children:"Validation des plages de temps"}),"\n",(0,s.jsx)(n.li,{children:"Conversion en TimeSpan pour l'UI"}),"\n",(0,s.jsx)(n.li,{children:"Mise \xe0 jour des plages de dates"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"ExclusionChannel"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente un canal exclu"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les plages de fr\xe9quences exclues"}),"\n",(0,s.jsx)(n.li,{children:"Informations sur le pays et le type"}),"\n",(0,s.jsx)(n.li,{children:"Largeur de canal et statut d'exclusion"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"CountryChannelConfig"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Configuration des canaux par pays"}),"\n",(0,s.jsx)(n.li,{children:"D\xe9finit les plages de fr\xe9quences autoris\xe9es"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les largeurs de canal"}),"\n",(0,s.jsx)(n.li,{children:"Configuration par d\xe9faut des plages"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"FrequencyData"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stocke les donn\xe9es de fr\xe9quences utilis\xe9es"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les intermodulations d'ordre 3, 5, 7, 9"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les intermodulations \xe0 3 \xe9metteurs"}),"\n",(0,s.jsx)(n.li,{children:"S\xe9rialisation des donn\xe9es de fr\xe9quences"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"ChannelInfo"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente les informations d'un canal"}),"\n",(0,s.jsx)(n.li,{children:"Contient les num\xe9ros de canal et les fr\xe9quences"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DeviceDiscoveredEventArgs"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Repr\xe9sente un appareil d\xe9couvert sur le r\xe9seau"}),"\n",(0,s.jsx)(n.li,{children:"Contient les informations de base de l'appareil"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les informations des canaux"}),"\n",(0,s.jsx)(n.li,{children:"Utilis\xe9 pour la conversion en RFDevice"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"RFDeviceService"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"G\xe8re la liste des appareils"}),"\n",(0,s.jsx)(n.li,{children:"Fournit l'acc\xe8s aux appareils"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"RFChannelService"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"G\xe8re la liste des canaux"}),"\n",(0,s.jsx)(n.li,{children:"Fournit l'acc\xe8s aux canaux"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"FrequencyDataService"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"G\xe8re les donn\xe9es de fr\xe9quences"}),"\n",(0,s.jsx)(n.li,{children:"Fournit l'acc\xe8s aux donn\xe9es d'intermodulation"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DeviceMappingService"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"G\xe8re la conversion entre DeviceDiscoveredEventArgs et RFDevice"}),"\n",(0,s.jsx)(n.li,{children:"Coordonne la synchronisation des appareils"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les mises \xe0 jour bidirectionnelles"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"DiscoveryService"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"G\xe8re la d\xe9couverte des appareils sur le r\xe9seau"}),"\n",(0,s.jsx)(n.li,{children:"Utilise mDNS/Bonjour pour la d\xe9couverte"}),"\n",(0,s.jsx)(n.li,{children:"Coordonne les handlers d'appareils"}),"\n",(0,s.jsx)(n.li,{children:"V\xe9rifie l'\xe9tat de synchronisation"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"handlers-et-commandes",children:"Handlers et Commandes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"IDeviceHandler"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Interface pour les handlers d'appareils"}),"\n",(0,s.jsx)(n.li,{children:"D\xe9finit les op\xe9rations communes"}),"\n",(0,s.jsx)(n.li,{children:"Permet l'extensibilit\xe9"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"SennheiserHandler"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Impl\xe9mentation pour les appareils Sennheiser"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les protocoles sp\xe9cifiques"}),"\n",(0,s.jsx)(n.li,{children:"Supporte les fonctionnalit\xe9s avanc\xe9es"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"IDeviceCommandSet"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Interface pour les commandes d'appareils"}),"\n",(0,s.jsx)(n.li,{children:"D\xe9finit les commandes communes"}),"\n",(0,s.jsx)(n.li,{children:"Permet l'extensibilit\xe9"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"SennheiserCommandSet"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Impl\xe9mentation des commandes Sennheiser"}),"\n",(0,s.jsx)(n.li,{children:"G\xe8re les commandes sp\xe9cifiques"}),"\n",(0,s.jsx)(n.li,{children:"Supporte les fonctionnalit\xe9s avanc\xe9es"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>a});var i=r(6540);const s={},l=i.createContext(s);function d(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);