"use strict";(self.webpackChunkrf_go_docs=self.webpackChunkrf_go_docs||[]).push([[6703],{6609:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"api/services","title":"API Interne - Services","description":"Vue d\'ensemble","source":"@site/docs/api/services.md","sourceDirName":"api","slug":"/api/services","permalink":"/docs/api/services","draft":false,"unlisted":false,"editUrl":"https://github.com/Beatwen/RF_Go/tree/main/docs/api/services.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Protocoles Sp\xe9cifiques aux Appareils","permalink":"/docs/protocols/device-specific"},"next":{"title":"API Interne - Mod\xe8les","permalink":"/docs/api/models"}}');var s=n(4848),c=n(8453);const l={},d="API Interne - Services",a={},o=[{value:"Vue d&#39;ensemble",id:"vue-densemble",level:2},{value:"Services Principaux",id:"services-principaux",level:2},{value:"DiscoveryService",id:"discoveryservice",level:3},{value:"M\xe9thodes",id:"m\xe9thodes",level:4},{value:"\xc9v\xe9nements",id:"\xe9v\xe9nements",level:4},{value:"DeviceMappingService",id:"devicemappingservice",level:3},{value:"M\xe9thodes",id:"m\xe9thodes-1",level:4},{value:"FrequencyManagementService",id:"frequencymanagementservice",level:3},{value:"M\xe9thodes",id:"m\xe9thodes-2",level:4},{value:"GroupManagementService",id:"groupmanagementservice",level:3},{value:"M\xe9thodes",id:"m\xe9thodes-3",level:4},{value:"TimeperiodManagementService",id:"timeperiodmanagementservice",level:3},{value:"M\xe9thodes",id:"m\xe9thodes-4",level:4},{value:"Diagramme de S\xe9quence",id:"diagramme-de-s\xe9quence",level:2},{value:"Bonnes Pratiques d&#39;Utilisation",id:"bonnes-pratiques-dutilisation",level:2}];function t(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"api-interne---services",children:"API Interne - Services"})}),"\n",(0,s.jsx)(i.h2,{id:"vue-densemble",children:"Vue d'ensemble"}),"\n",(0,s.jsx)(i.p,{children:"Cette section documente les services principaux de l'API interne de RF Go. Ces services constituent la couche m\xe9tier de l'application et g\xe8rent les interactions entre les diff\xe9rents composants."}),"\n",(0,s.jsx)(i.h2,{id:"services-principaux",children:"Services Principaux"}),"\n",(0,s.jsx)(i.h3,{id:"discoveryservice",children:"DiscoveryService"}),"\n",(0,s.jsx)(i.p,{children:"Service responsable de la d\xe9couverte des appareils sur le r\xe9seau."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public interface IDiscoveryService\r\n{\r\n    Task<IEnumerable<RFDevice>> DiscoverDevicesAsync();\r\n    Task<RFDevice> GetDeviceInfoAsync(string deviceId);\r\n    event EventHandler<DeviceDiscoveredEventArgs> DeviceDiscovered;\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"m\xe9thodes",children:"M\xe9thodes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"DiscoverDevicesAsync()"})," : D\xe9couvre tous les appareils disponibles"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GetDeviceInfoAsync(string deviceId)"})," : R\xe9cup\xe8re les informations d'un appareil sp\xe9cifique"]}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"\xe9v\xe9nements",children:"\xc9v\xe9nements"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"DeviceDiscovered"})," : D\xe9clench\xe9 lorsqu'un nouvel appareil est d\xe9couvert"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"devicemappingservice",children:"DeviceMappingService"}),"\n",(0,s.jsx)(i.p,{children:"Service de mapping des donn\xe9es entre les mod\xe8les et les appareils."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public interface IDeviceMappingService\r\n{\r\n    Task<RFDevice> MapDeviceToModelAsync(IDeviceHandler device);\r\n    Task<IDeviceHandler> MapModelToDeviceAsync(RFDevice model);\r\n    Task<bool> ValidateMappingAsync(RFDevice model);\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"m\xe9thodes-1",children:"M\xe9thodes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"MapDeviceToModelAsync(IDeviceHandler device)"})," : Convertit un appareil en mod\xe8le"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"MapModelToDeviceAsync(RFDevice model)"})," : Convertit un mod\xe8le en appareil"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ValidateMappingAsync(RFDevice model)"})," : Valide le mapping d'un mod\xe8le"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"frequencymanagementservice",children:"FrequencyManagementService"}),"\n",(0,s.jsx)(i.p,{children:"Service de gestion des fr\xe9quences."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public interface IFrequencyManagementService\r\n{\r\n    Task<IEnumerable<FrequencyData>> GetAvailableFrequenciesAsync();\r\n    Task<bool> AssignFrequencyAsync(RFDevice device, FrequencyData frequency);\r\n    Task<bool> ValidateFrequencyAssignmentAsync(RFDevice device, FrequencyData frequency);\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"m\xe9thodes-2",children:"M\xe9thodes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GetAvailableFrequenciesAsync()"})," : R\xe9cup\xe8re les fr\xe9quences disponibles"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AssignFrequencyAsync(RFDevice device, FrequencyData frequency)"})," : Assign une fr\xe9quence \xe0 un appareil"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"ValidateFrequencyAssignmentAsync(RFDevice device, FrequencyData frequency)"})," : Valide l'assignation d'une fr\xe9quence"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"groupmanagementservice",children:"GroupManagementService"}),"\n",(0,s.jsx)(i.p,{children:"Service de gestion des groupes d'appareils."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public interface IGroupManagementService\r\n{\r\n    Task<RFGroup> CreateGroupAsync(string name);\r\n    Task<bool> AddDeviceToGroupAsync(RFGroup group, RFDevice device);\r\n    Task<bool> RemoveDeviceFromGroupAsync(RFGroup group, RFDevice device);\r\n    Task<IEnumerable<RFGroup>> GetGroupsAsync();\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"m\xe9thodes-3",children:"M\xe9thodes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"CreateGroupAsync(string name)"})," : Cr\xe9e un nouveau groupe"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AddDeviceToGroupAsync(RFGroup group, RFDevice device)"})," : Ajoute un appareil \xe0 un groupe"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"RemoveDeviceFromGroupAsync(RFGroup group, RFDevice device)"})," : Retire un appareil d'un groupe"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GetGroupsAsync()"})," : R\xe9cup\xe8re tous les groupes"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"timeperiodmanagementservice",children:"TimeperiodManagementService"}),"\n",(0,s.jsx)(i.p,{children:"Service de gestion des p\xe9riodes d'utilisation."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-csharp",children:"public interface ITimeperiodManagementService\r\n{\r\n    Task<RFTimeperiod> CreateTimeperiodAsync(DateTime startTime, DateTime endTime);\r\n    Task<bool> AssignDeviceToTimeperiodAsync(RFTimeperiod timeperiod, RFDevice device);\r\n    Task<bool> RemoveDeviceFromTimeperiodAsync(RFTimeperiod timeperiod, RFDevice device);\r\n    Task<IEnumerable<RFTimeperiod>> GetTimeperiodsAsync();\r\n}\n"})}),"\n",(0,s.jsx)(i.h4,{id:"m\xe9thodes-4",children:"M\xe9thodes"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"CreateTimeperiodAsync(DateTime startTime, DateTime endTime)"})," : Cr\xe9e une nouvelle p\xe9riode"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AssignDeviceToTimeperiodAsync(RFTimeperiod timeperiod, RFDevice device)"})," : Assign un appareil \xe0 une p\xe9riode"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"RemoveDeviceFromTimeperiodAsync(RFTimeperiod timeperiod, RFDevice device)"})," : Retire un appareil d'une p\xe9riode"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"GetTimeperiodsAsync()"})," : R\xe9cup\xe8re toutes les p\xe9riodes"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"diagramme-de-s\xe9quence",children:"Diagramme de S\xe9quence"}),"\n",(0,s.jsx)(i.mermaid,{value:"sequenceDiagram\r\n    participant UI as Interface Utilisateur\r\n    participant VM as ViewModel\r\n    participant DS as DiscoveryService\r\n    participant DMS as DeviceMappingService\r\n    participant FMS as FrequencyManagementService\r\n    participant GMS as GroupManagementService\r\n    participant TMS as TimeperiodManagementService\r\n\r\n    UI->>VM: Action Utilisateur\r\n    VM->>DS: DiscoverDevicesAsync()\r\n    DS--\x3e>VM: Liste des Appareils\r\n    VM->>DMS: MapDeviceToModelAsync()\r\n    DMS--\x3e>VM: Mod\xe8le RFDevice\r\n    VM->>FMS: GetAvailableFrequenciesAsync()\r\n    FMS--\x3e>VM: Liste des Fr\xe9quences\r\n    VM->>GMS: CreateGroupAsync()\r\n    GMS--\x3e>VM: Nouveau Groupe\r\n    VM->>TMS: CreateTimeperiodAsync()\r\n    TMS--\x3e>VM: Nouvelle P\xe9riode\r\n    VM--\x3e>UI: Mise \xe0 jour UI"}),"\n",(0,s.jsx)(i.h2,{id:"bonnes-pratiques-dutilisation",children:"Bonnes Pratiques d'Utilisation"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Gestion des Erreurs"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Toujours utiliser try-catch pour les appels de service"}),"\n",(0,s.jsx)(i.li,{children:"Logger les erreurs de mani\xe8re appropri\xe9e"}),"\n",(0,s.jsx)(i.li,{children:"Fournir des messages d'erreur clairs aux utilisateurs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Performance"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Utiliser le caching quand appropri\xe9"}),"\n",(0,s.jsx)(i.li,{children:"Limiter les appels de service inutiles"}),"\n",(0,s.jsx)(i.li,{children:"Utiliser des op\xe9rations asynchrones"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"S\xe9curit\xe9"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Valider toutes les entr\xe9es"}),"\n",(0,s.jsx)(i.li,{children:"V\xe9rifier les permissions"}),"\n",(0,s.jsx)(i.li,{children:"Utiliser des transactions pour les op\xe9rations critiques"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.strong,{children:"Maintenance"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Documenter les changements d'API"}),"\n",(0,s.jsx)(i.li,{children:"Maintenir la r\xe9trocompatibilit\xe9"}),"\n",(0,s.jsx)(i.li,{children:"Tester r\xe9guli\xe8rement les services"}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>d});var r=n(6540);const s={},c=r.createContext(s);function l(e){const i=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(c.Provider,{value:i},e.children)}}}]);