"use strict";(self.webpackChunkrf_go_docs=self.webpackChunkrf_go_docs||[]).push([[3959],{2548:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"protocols/device-specific","title":"Protocoles Sp\xe9cifiques aux Appareils","description":"RF Go prend en charge divers appareils audio sans fil provenant de diff\xe9rents fabricants, chacun avec ses propres protocoles de communication. Cette section d\xe9taille les protocoles sp\xe9cifiques impl\xe9ment\xe9s pour chaque type d\'appareil.","source":"@site/docs/protocols/device-specific.md","sourceDirName":"protocols","slug":"/protocols/device-specific","permalink":"/RF_Go/protocols/device-specific","draft":false,"unlisted":false,"editUrl":"https://github.com/Beatwen/RF_Go/tree/main/docs/protocols/device-specific.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Protocoles UDP/TCP","permalink":"/RF_Go/protocols/udp-tcp"},"next":{"title":"\ud83d\udd11 API Licensing","permalink":"/RF_Go/api/overview"}}');var s=i(4848),d=i(8453);const c={},l="Protocoles Sp\xe9cifiques aux Appareils",o={},t=[{value:"Sennheiser",id:"sennheiser",level:2},{value:"Sennheiser G4 IEM",id:"sennheiser-g4-iem",level:3},{value:"D\xe9couverte",id:"d\xe9couverte",level:4},{value:"Format du Paquet de D\xe9couverte",id:"format-du-paquet-de-d\xe9couverte",level:4},{value:"Format de R\xe9ponse G4",id:"format-de-r\xe9ponse-g4",level:4},{value:"Communication",id:"communication",level:4},{value:"D\xe9tection de la Bande de Fr\xe9quence",id:"d\xe9tection-de-la-bande-de-fr\xe9quence",level:4},{value:"Sennheiser EWDX-EM2",id:"sennheiser-ewdx-em2",level:3},{value:"D\xe9couverte Sennheiser",id:"d\xe9couverte-sennheiser",level:4},{value:"Communication Sennheiser",id:"communication-sennheiser",level:4},{value:"Format des Donn\xe9es",id:"format-des-donn\xe9es",level:4},{value:"Sennheiser Legacy (s\xe9rie 3000/5000)",id:"sennheiser-legacy-s\xe9rie-30005000",level:3},{value:"Shure",id:"shure",level:2},{value:"Shure AD4D, PSM1000, UR4D",id:"shure-ad4d-psm1000-ur4d",level:3},{value:"D\xe9couverte Shure",id:"d\xe9couverte-shure",level:4},{value:"Communication Shure",id:"communication-shure",level:4},{value:"Format des Donn\xe9es Shure",id:"format-des-donn\xe9es-shure",level:4},{value:"Wisycom",id:"wisycom",level:2},{value:"D\xe9couverte Wisycom",id:"d\xe9couverte-wisycom",level:3},{value:"Communication Wisycom",id:"communication-wisycom",level:3},{value:"Impl\xe9mentation Modulaire",id:"impl\xe9mentation-modulaire",level:2},{value:"Gestionnaires d&#39;Appareils",id:"gestionnaires-dappareils",level:3},{value:"Ensembles de Commandes",id:"ensembles-de-commandes",level:3},{value:"Services de Communication",id:"services-de-communication",level:3},{value:"R\xe9solution des Probl\xe8mes Communs",id:"r\xe9solution-des-probl\xe8mes-communs",level:2},{value:"Probl\xe8mes de D\xe9couverte G4",id:"probl\xe8mes-de-d\xe9couverte-g4",level:3},{value:"Probl\xe8mes de Communication",id:"probl\xe8mes-de-communication",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"protocoles-sp\xe9cifiques-aux-appareils",children:"Protocoles Sp\xe9cifiques aux Appareils"})}),"\n",(0,s.jsx)(n.p,{children:"RF Go prend en charge divers appareils audio sans fil provenant de diff\xe9rents fabricants, chacun avec ses propres protocoles de communication. Cette section d\xe9taille les protocoles sp\xe9cifiques impl\xe9ment\xe9s pour chaque type d'appareil."}),"\n",(0,s.jsx)(n.h2,{id:"sennheiser",children:"Sennheiser"}),"\n",(0,s.jsx)(n.h3,{id:"sennheiser-g4-iem",children:"Sennheiser G4 IEM"}),"\n",(0,s.jsx)(n.p,{children:"Les appareils Sennheiser G4 IEM (In-Ear Monitoring) utilisent un protocole propri\xe9taire qui diff\xe8re des autres appareils Sennheiser."}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte",children:"D\xe9couverte"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\r\n    participant RFGo\r\n    participant Network\r\n    participant G4Device\r\n    \r\n    RFGo->>Network: Paquet UDP Multicast (224.0.0.251:8133)\r\n    Note right of RFGo: Contenu: [servicecommand]devinfo\r\n    Network->>G4Device: Diffusion du paquet\r\n    G4Device->>Network: R\xe9ponse UDP (port source: 53212)\r\n    Note right of G4Device: Format: Model=XX ID=YY IPA=ZZ.ZZ.ZZ.ZZ\r\n    Network->>RFGo: Transmission de la r\xe9ponse"}),"\n",(0,s.jsx)(n.h4,{id:"format-du-paquet-de-d\xe9couverte",children:"Format du Paquet de D\xe9couverte"}),"\n",(0,s.jsx)(n.p,{children:"Le paquet de d\xe9couverte G4 a une structure sp\xe9cifique:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["En-t\xeate de 8 octets: ",(0,s.jsx)(n.code,{children:"0x12, 0x07, 0x06, 0x20, 0x00, 0x00, 0x19, 0x00"})]}),"\n",(0,s.jsxs)(n.li,{children:["Commande: ",(0,s.jsx)(n.code,{children:"[servicecommand]devinfo\\r\\n"})]}),"\n",(0,s.jsx)(n.li,{children:"Remplissage jusqu'\xe0 1032 octets"}),"\n",(0,s.jsxs)(n.li,{children:["Pied de page de 3 octets: ",(0,s.jsx)(n.code,{children:"0x01, 0x01, 0x01"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Taille totale: 1035 octets"}),"\n",(0,s.jsx)(n.h4,{id:"format-de-r\xe9ponse-g4",children:"Format de R\xe9ponse G4"}),"\n",(0,s.jsx)(n.p,{children:"Les r\xe9ponses des appareils G4 contiennent les informations suivantes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Model=SR-IEMG4\r\nID=1234567\r\nIPA=192.168.1.100\r\n...autres param\xe8tres...\n"})}),"\n",(0,s.jsx)(n.h4,{id:"communication",children:"Communication"}),"\n",(0,s.jsx)(n.p,{children:"La communication avec les appareils G4 se fait via UDP sur le port 53212. Les commandes suivent ce format:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Commande"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Exemple de R\xe9ponse"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"FirmwareRevision\\r"})}),(0,s.jsx)(n.td,{children:"Obtient la version du firmware"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"1.2.3"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RfConfig\\r"})}),(0,s.jsx)(n.td,{children:"Obtient la configuration RF"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Range=516000-558000"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Name\\r"})}),(0,s.jsx)(n.td,{children:"Obtient le nom du canal"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Vocals"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Frequency\\r"})}),(0,s.jsx)(n.td,{children:"Obtient la fr\xe9quence actuelle"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"518000"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Frequency 518000\\r"})}),(0,s.jsx)(n.td,{children:"D\xe9finit la fr\xe9quence"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OK"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Name Vocals\\r"})}),(0,s.jsx)(n.td,{children:"D\xe9finit le nom du canal"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OK"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Mute 0\\r"})}),(0,s.jsx)(n.td,{children:"Active le son (0 = non muet, 1 = muet)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OK"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Sensitivity 0\\r"})}),(0,s.jsx)(n.td,{children:"D\xe9finit la sensibilit\xe9"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OK"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Mode 1\\r"})}),(0,s.jsx)(n.td,{children:"D\xe9finit le mode (0 = mono, 1 = st\xe9r\xe9o)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"OK"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9tection-de-la-bande-de-fr\xe9quence",children:"D\xe9tection de la Bande de Fr\xe9quence"}),"\n",(0,s.jsxs)(n.p,{children:["RF Go identifie automatiquement la bande de fr\xe9quence des appareils G4 en comparant les plages de fr\xe9quences report\xe9es par l'appareil avec les d\xe9finitions dans ",(0,s.jsx)(n.code,{children:"Devices.cs"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"SR-IEMG4": {\r\n  "A1": [ 470000, 516000, 1, 25, 400, 250, 0, 0, 150 ],\r\n  "A": [ 516000, 558000, 1, 25, 400, 250, 0, 0, 150 ],\r\n  "AS": [ 520000, 558000, 1, 25, 400, 250, 0, 0, 150 ],\r\n  "G": [ 566000, 608000, 1, 25, 400, 250, 0, 0, 150 ],\r\n  ...\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sennheiser-ewdx-em2",children:"Sennheiser EWDX-EM2"}),"\n",(0,s.jsx)(n.p,{children:"Les r\xe9cepteurs Sennheiser EWDX-EM2 utilisent un protocole diff\xe9rent bas\xe9 sur mDNS et API REST."}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte-sennheiser",children:"D\xe9couverte Sennheiser"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Service mDNS: ",(0,s.jsx)(n.code,{children:"_ewd._http.local"})]}),"\n",(0,s.jsx)(n.li,{children:"Port standard: variable (g\xe9n\xe9ralement 80)"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"communication-sennheiser",children:"Communication Sennheiser"}),"\n",(0,s.jsx)(n.p,{children:"La communication avec les appareils EWDX se fait via API REST/HTTP:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Endpoint"}),(0,s.jsx)(n.th,{children:"M\xe9thode"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/device"})}),(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:"Informations sur l'appareil"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/rf"})}),(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:"Configuration RF actuelle"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/rf"})}),(0,s.jsx)(n.td,{children:"POST"}),(0,s.jsx)(n.td,{children:"Mise \xe0 jour de la configuration RF"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/channels/0"})}),(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:"Informations sur le canal 1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/channels/1"})}),(0,s.jsx)(n.td,{children:"GET"}),(0,s.jsx)(n.td,{children:"Informations sur le canal 2"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"/api/channels/0/name"})}),(0,s.jsx)(n.td,{children:"POST"}),(0,s.jsx)(n.td,{children:"D\xe9finit le nom du canal 1"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"format-des-donn\xe9es",children:"Format des Donn\xe9es"}),"\n",(0,s.jsx)(n.p,{children:"Les donn\xe9es sont \xe9chang\xe9es en format JSON:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "device": {\r\n    "model": "EWDX-EM2",\r\n    "serialNumber": "1234567",\r\n    "firmwareVersion": "1.2.3"\r\n  },\r\n  "rf": {\r\n    "frequency": 606200,\r\n    "band": "S1-10",\r\n    "power": "standard",\r\n    "mode": "diversity"\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sennheiser-legacy-s\xe9rie-30005000",children:"Sennheiser Legacy (s\xe9rie 3000/5000)"}),"\n",(0,s.jsxs)(n.p,{children:["Les appareils Sennheiser plus anciens utilisent g\xe9n\xe9ralement le protocole mDNS standard avec service ",(0,s.jsx)(n.code,{children:"_ssc._udp.local"})," et communication UDP sur le port 45."]}),"\n",(0,s.jsx)(n.h2,{id:"shure",children:"Shure"}),"\n",(0,s.jsx)(n.h3,{id:"shure-ad4d-psm1000-ur4d",children:"Shure AD4D, PSM1000, UR4D"}),"\n",(0,s.jsx)(n.p,{children:"Les appareils Shure utilisent un protocole propri\xe9taire bas\xe9 sur mDNS et communication UDP."}),"\n",(0,s.jsx)(n.h4,{id:"d\xe9couverte-shure",children:"D\xe9couverte Shure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Port standard: 2202"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"communication-shure",children:"Communication Shure"}),"\n",(0,s.jsx)(n.p,{children:"La communication avec les appareils Shure se fait via leur protocole SSC (Shure System Control) sur UDP:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Commande"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Format de R\xe9ponse"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'{"schema":"device"}\\n'})}),(0,s.jsx)(n.td,{children:"Informations sur l'appareil"}),(0,s.jsx)(n.td,{children:"JSON"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'{"schema":"rx1"}\\n'})}),(0,s.jsx)(n.td,{children:"Informations sur le r\xe9cepteur 1"}),(0,s.jsx)(n.td,{children:"JSON"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'{"schema":"tx1"}\\n'})}),(0,s.jsx)(n.td,{children:"Informations sur l'\xe9metteur 1"}),(0,s.jsx)(n.td,{children:"JSON"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'{"tx1":{"freq":"577.000"}}\\n'})}),(0,s.jsx)(n.td,{children:"D\xe9finit la fr\xe9quence de l'\xe9metteur 1"}),(0,s.jsx)(n.td,{children:"JSON confirmant le changement"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"format-des-donn\xe9es-shure",children:"Format des Donn\xe9es Shure"}),"\n",(0,s.jsx)(n.p,{children:"Les commandes et r\xe9ponses sont en format JSON:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "device_id": "AD4D-1234567",\r\n  "model": "AD4D",\r\n  "band": "G56",\r\n  "firmware": "1.2.3",\r\n  "channels": 2\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"wisycom",children:"Wisycom"}),"\n",(0,s.jsx)(n.p,{children:"Les appareils Wisycom comme MTP60, MTP61 et MCR54 utilisent leur propre protocole propri\xe9taire bas\xe9 sur UDP et des formats de commande sp\xe9cifiques."}),"\n",(0,s.jsx)(n.h3,{id:"d\xe9couverte-wisycom",children:"D\xe9couverte Wisycom"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Les appareils Wisycom sont g\xe9n\xe9ralement d\xe9couverts via mDNS ou d\xe9tection d'adresse IP directe"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"communication-wisycom",children:"Communication Wisycom"}),"\n",(0,s.jsx)(n.p,{children:"La communication se fait via un protocole propri\xe9taire avec des commandes sp\xe9cifiques au mod\xe8le."}),"\n",(0,s.jsx)(n.h2,{id:"impl\xe9mentation-modulaire",children:"Impl\xe9mentation Modulaire"}),"\n",(0,s.jsx)(n.p,{children:"RF Go utilise une architecture modulaire pour g\xe9rer les diff\xe9rents protocoles:"}),"\n",(0,s.jsx)(n.h3,{id:"gestionnaires-dappareils",children:"Gestionnaires d'Appareils"}),"\n",(0,s.jsxs)(n.p,{children:["Chaque marque et mod\xe8le a son propre gestionnaire qui impl\xe9mente l'interface ",(0,s.jsx)(n.code,{children:"IDeviceHandler"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public interface IDeviceHandler\r\n{\r\n    string Brand { get; }\r\n    bool CanHandle(string serviceName);\r\n    Task HandleDevice(DeviceDiscoveredEventArgs deviceInfo);\r\n    Task<(bool IsEqual, bool IsNotResponding)> IsDevicePendingSync(DeviceDiscoveredEventArgs deviceInfo);\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ensembles-de-commandes",children:"Ensembles de Commandes"}),"\n",(0,s.jsxs)(n.p,{children:["Les commandes sp\xe9cifiques \xe0 chaque appareil sont d\xe9finies dans des classes qui impl\xe9mentent ",(0,s.jsx)(n.code,{children:"IDeviceCommandSet"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public interface IDeviceCommandSet\r\n{\r\n    string GetModelCommand();\r\n    string GetFrequencyCodeCommand();\r\n    string GetSerialCommand();\r\n    string GetChannelNameCommand(int channel);\r\n    string GetChannelFrequencyCommand(int channel);\r\n    // ... autres commandes\r\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"services-de-communication",children:"Services de Communication"}),"\n",(0,s.jsx)(n.p,{children:"Des services de communication sp\xe9cialis\xe9s sont utilis\xe9s selon les besoins de chaque type d'appareil:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"UDPCommunicationService"})," - Pour la plupart des appareils (avec m\xe9thodes sp\xe9ciales pour G4)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RESTCommunicationService"})," - Pour les appareils avec API REST (EWDX)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"TCPCommunicationService"})," - Pour les cas o\xf9 TCP est n\xe9cessaire"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"r\xe9solution-des-probl\xe8mes-communs",children:"R\xe9solution des Probl\xe8mes Communs"}),"\n",(0,s.jsx)(n.h3,{id:"probl\xe8mes-de-d\xe9couverte-g4",children:"Probl\xe8mes de D\xe9couverte G4"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"V\xe9rifier que les ports 8133 et 53212 sont ouverts"}),"\n",(0,s.jsx)(n.li,{children:"S'assurer que le multicast est activ\xe9 sur le r\xe9seau"}),"\n",(0,s.jsx)(n.li,{children:"V\xe9rifier que l'appareil est sur le m\xeame segment r\xe9seau"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"probl\xe8mes-de-communication",children:"Probl\xe8mes de Communication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"V\xe9rifier la connectivit\xe9 r\xe9seau avec l'appareil (ping)"}),"\n",(0,s.jsx)(n.li,{children:"S'assurer que les bons ports sont accessibles"}),"\n",(0,s.jsx)(n.li,{children:"V\xe9rifier que l'appareil a une IP valide et unique"}),"\n",(0,s.jsx)(n.li,{children:"Pour G4, v\xe9rifier que le port 53212 n'est pas en conflit avec d'autres applications"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var r=i(6540);const s={},d=r.createContext(s);function c(e){const n=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(d.Provider,{value:n},e.children)}}}]);